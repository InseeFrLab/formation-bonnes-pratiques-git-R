## Application 2 {.smaller}


:::{.callout-tip collapse="true" icon=false}
## Partie 1 : modularisation du projet

::: {.nonincremental}
1. Déplacer toutes les fonctions dans un fichier `R/functions.R`.
2. Donner à la fonction `fonction_de_stat_agregee` un nom plus pertinent et des noms d'arguments plus transparents. 
    + Documenter la fonction `fonction_de_stat_agregee` selon le standard `roxygen`. Vous pouvez vous aider d'une IA assistante comme `ChatGPT`, `Claude` ou `Copilot`, rien n'est sensible dans ce code (d'ailleurs rien de sensible ne doit être dans du code !). 
    + Utiliser les exemples d'utilisation de `fonction_de_stat_agregee` dans cette documentation.
3. Dans `script.R`, appeler en début de chaîne ces fonctions avec `source("R/functions.R", encoding = "UTF-8")`.
4. Tester le bon fonctionnement de `script.R`.
5. Si votre chaîne écrit des _outputs_ ou utilise des _inputs_ (par exemple des données), restructurer l'aborescence du projet pour le rendre plus lisible et adaptez votre code en fonction. 
6. Renommer (voire déplacer) les scripts `get_data.R` et `script.R` pour rendre plus intelligible la chaîne de production.
7. Mettre à jour le `.gitignore` puis _commit_/_push_.
:::

:::



## Application 2 {.smaller}

:::{.callout-tip collapse="true" icon=false}
## Partie 2 : création d'un *package* (FACULTATIF)

::: {.nonincremental}
1. Fermer le Rproj en cours ("Close Project" en haut à droite).
2. Initialiser un *package* avec la fonction `usethis::create_package()` (par défaut dans le *working directory*)
3. Placer dans le dossier `R` du *package* un module `stat.R` et y copier la fonction de statistique agrégée
4. Remplir le fichier `DESCRIPTION`. En particulier, spécifier les dépendances nécessaires (`Imports`) et facultatives (`Suggests`)
5. Construire la documentation du *package* avec la fonction `devtools::document()`. Où est-elle stockée et sous quel format ?
6. Charger le package avec la fonction `devtools::load_all()` et vérifier que la fonction marche correctement
7. Vérifier que la documentation de notre fonction est accessible avec `?ma_fonction`
8. (Facultatif) Initialiser un nouveau projet sur `GitHub` est y mettre le code du *package*. Vérifier que le *package* peut être installé en local avec la fonction `devtools::install_github()`.
:::

:::

## Checkpoint

::: {.callout-caution}
## Checkpoint

* Le script [`script.R`](https://raw.githubusercontent.com/InseeFrLab/formation-bonnes-pratiques-git-R/refs/heads/main/R/checkpoints/application2/script.R)
* Le script [`R/functions.R`](https://raw.githubusercontent.com/InseeFrLab/formation-bonnes-pratiques-git-R/refs/heads/main/R/checkpoints/application2/functions.R)

![](checkpoint.jpg){width=40% fig-align="center"}

:::
