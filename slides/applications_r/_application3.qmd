## Application 3 (pr√©paration) {.smaller}

:::{.callout-tip .nonincremental collapse="true" icon=false}
# Partie 0: pr√©paration de l'exercice
* Remplacer le contenu du script `download_data` en copiant-collant le contenu de [ce fichier](https://raw.githubusercontent.com/InseeFrLab/formation-bonnes-pratiques-exo-correction/refs/heads/dev/R/download_data.R). Ex√©cuter ce script, il cr√©e les fichiers n√©cessaires pour ces exercices.
* Cr√©er le script `R/benchmarking_functions.R` en copiant-collant le contenu de [ce fichier](https://raw.githubusercontent.com/InseeFrLab/formation-bonnes-pratiques-exo-correction/refs/heads/dev/R/benchmark_functions.R)
* Cr√©er un nouveau script `R` qui servira de bac √† sable pour tester le format `Parquet`.
* Cr√©er les variables qui seront utiles pour les prochaines questions

```{.r}
columns_subset <- c(
  "REGION", "AGED", "ANAI", "CATL", "COUPLE",
  "SEXE", "SURF", "TP", "TRANS"
)

filename_sample_csv <- "data/RPindividus_24.csv"
filename_sample_parquet <- gsub("csv", "parquet", filename_sample_csv)
filename_full_parquet <- gsub("_24", "", filename_sample_parquet)
filename_full_csv <- gsub("parquet", "csv", filename_full_parquet)
```

:::

## Application 3 (partie 1) {.smaller}

::: {.callout-tip .nonincremental collapse="true" icon=false}
## Partie 1: Ouvrir un fichier `Parquet` et comprendre la logique de la lecture par bloc

Lecture du fichier avec `read_parquet` du _package_ `arrow`:

* Lire les donn√©es dont le chemin est stock√© dans `filename_sample_parquet`. Pour mesurer le temps d'ex√©cution, vous pouvez utiliser le squelette de code sugg√©r√© ci-dessous üëáÔ∏è.
* Faire la m√™me chose mais cette fois, ajouter un filtre _ex post_ avec les colonnes (`select(any_of(columns_subset))`). Mesurez-vous une diff√©rence dans les temps de traitement ?

Lecture du fichier avec `open_dataset` du _package_ `arrow`:

* Cette fois, lire le fichier avec `open_dataset(filename_sample_parquet)`. Regarder la classe de cet objet. 
* Faire un `head(5)` apr√®s `open_dataset`. Observer l'objet obtenu (sortie en console, classe).
* Maintenant regarder lorsque vous ajouter `collect()` apr√®s cette cha√Æne.
* Mesurer le temps d'ex√©cution de `open_dataset(filename_sample_parquet) %>% collect()`. Ajouter le filtre `select(any_of(columns_subset))`. Sa place influence-t-elle la vitesse de votre processus ? 

Comparaison √† la lecture d'un CSV: 

* Utiliser `readr::read_csv` pour lire le fichier (chemin `filename_sample_csv`) avec et sans l'argument `col_select`. Avez-vous des gains de performance si vous ne lisez le fichier qu'avec ces colonnes ? 

<details>

<summary>
Mesurer le temps d'ex√©cution
</summary>

```{.r}
start_time <- Sys.time()
# lecture du fichier ici
end_time <- Sys.time()
diff_time <- end_time - start_time
```

</details>

:::

_‚ùìÔ∏è Quelle m√©thode retenir pour lire un `Parquet` avec `Arrow` ?_

## Application 3 (partie 2) {.smaller}

::: {.callout-tip .nonincremental collapse="true" icon=false}
## Partie 2: Un format l√©ger et efficace

Dans cet exercice, vous devrez utiliser `open_dataset` pour lire les `Parquet`. 

* Observer l'espace disque de chaque fichier par le biais de l'explorateur de fichiers
* Mesurer le temps d'ex√©cution de la lecture du fichier dont le chemin est stock√© dans la variable `filename_full_parquet`. 
    + Faire ceci avec et sans le filtre des colonnes[^csv].
    + La croissance du temps de traitement vous appara√Æt-elle √©norme ? 
* Ajouter apr√®s cette √©tape de lecture du fichier le filter `filter(REGION == "24")`. Comprenez-vous pourquoi vous ne b√©n√©ficiez pas de gain de performance ?   

G√©n√©ralisation des tests de performance:

* Reprendre le contenu de [ce fichier](https://raw.githubusercontent.com/InseeFrLab/formation-bonnes-pratiques-exo-correction/refs/heads/dev/R/benchmark.R). 
    * Installer les packages n√©cessaires (ils sont list√©s au d√©but du script)
    * Ex√©cuter le script. Pendant que l'import en CSV tourne (c'est assez long), explorer les fen√™tres interactives qui se sont ouvertes issues du _profiling_ permettant de mesurer la r√©partition du temps de diff√©rents processus.
* Quand tout a fini de tourner, regarder le tableau obtenu.
:::

_‚ùìÔ∏è Dans quel ordre sont faits les filtres par `Arrow` ?_

[^csv]: Ne pas faire ceci maintenant avec le CSV, le _benchmark_ arrive prochainement.

## Application 3 (partie 2) {.smaller}

::: {.callout-tip .nonincremental collapse="true" icon=false}
## Partie 2bis (optionnelle): Pour mieux comprendre le _predicate pushdown_ (optionnel)

`duckdb` fournit une m√©thode `EXPLAIN ANALYZE` pratique pour comprendre les optimisations faites √† la lecture d'un fichier `Parquet`.

* Prendre le contenu de [ce script](https://raw.githubusercontent.com/InseeFrLab/formation-bonnes-pratiques-exo-correction/refs/heads/dev/R/benchmark_optional.R)
* Ex√©cuter les diff√©rentes requ√™tes et regarder les diagrammes obtenus. 
* Comprenez-vous l'ordre du plan d'ex√©cution et l'effet sur les besoins de `R` ?

:::

_‚ùìÔ∏è Dans quel ordre sont faits les filtres par `Arrow` ? Comment faire si on veut r√©guli√®rement filtrer nos donn√©es √† partir de niveaux des variables ?_

## Application 3 (partie 3) {.smaller}

:::{.callout-tip .nonincremental collapse="true" icon=false}
# Partie 3: le Parquet partitionn√©

TO DO 
:::


## OLD

:::{.callout-tip collapse="true" icon=false}
## Du CSV au Parquet

::: {.nonincremental}
1. Effacer la base `individu_reg.csv`
2. Modifier le script `get_data.R` pour √©crire les donn√©es au format `Parquet` √† l'aide de la fonction [arrow::write_parquet](https://arrow.apache.org/docs/r/reference/write_parquet.html)
3. Ex√©cuter le script `get_data.R` modifi√© et comparer les tailles du fichier `csv` initial et du fichier `parquet`
4. Modifier la phase d'import dans `script.R` pour importer le fichier `Parquet` √† l'aide de la fonction [arrow::read_parquet](https://arrow.apache.org/docs/r/reference/read_parquet.html)
5. Ex√©cuter `script.R` et v√©rifier son bon fonctionnement
:::

:::

## Checkpoint

::: {layout=[30,70]}
:::{.nonincremental}

- [script.R](https://raw.githubusercontent.com/InseeFrLab/formation-bonnes-pratiques-git-R/main/R/checkpoints/application3/script.R)
- [get_data.R](https://raw.githubusercontent.com/InseeFrLab/formation-bonnes-pratiques-git-R/main/R/checkpoints/application3/get_data.R)

![](checkpoint.jpg){width=60%}
:::
:::
