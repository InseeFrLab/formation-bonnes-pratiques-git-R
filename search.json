[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Formation aux bonnes pratiques `Git` et `R`",
    "section": "",
    "text": "Un parcours de formation construit par l’Insee.\nTous les supports sont sur le Github InseeFrLab   \n\n\n\n\n  \n     \n      \n        \n          \n            \n          \n         \n        \n          \n            \n            \n\n            \n              \nVersion allégée de la formation aux bonnes pratiques en\nR et en Git, axée autour de\nl'apprentissage de Git, de la structure des projets R et\nde la qualité du code R\n\n\nVersion en une journée\n\n            \n\n            \n            \n              \n                \n              \n            \n            \n            \n              \n                \n                  \n                    \n                      \n                        Slides\n                      \n                    \n                  \n                \n              \n            \n          \n        \n\n        \n\n      \n     \n  \n\n  \n     \n      \n        \n          \n            \n          \n         \n        \n          \n            \n            \n\n            \n              \nVersion complète de la formation aux bonnes pratiques en\nR et en Git, axée autour de la notion de\nreproductibilité et de la collaboration.\n\n\nVersion en deux jours\n\n            \n\n            \n            \n              \n                \n              \n            \n            \n            \n              \n                \n                  \n                    \n                      \n                        Slides\n                      \n                    \n                  \n                \n              \n            \n          \n        \n\n        \n\n      \n     \n  \n\n  \n     \n      \n        \n          \n            \n          \n         \n        \n          \n            \n            \n\n            \n              \nVersion plus succincte pour sensibiliser les\nresponsables hiérarchiques au sujet\ndes bonnes pratiques de code\nR et en Git.\n\n\nVersion 1/2 journée\n\n            \n\n            \n            \n              \n                \n              \n            \n            \n            \n              \n                \n                  \n                    \n                      \n                        Slides\n                      \n                    \n                  \n                \n              \n            \n          \n        \n\n        \n\n      \n     \n  \n\n  \n     \n      \n        \n          \n            \n          \n         \n        \n          \n            \n            \n\n            \n              \nPrésentation rapide sous forme de teasing\nde la formation aux bonnes pratiques en\nR et en Git.\n\n\nVersion en 1h\n\n            \n\n            \n            \n              \n                \n              \n            \n            \n            \n              \n                \n                  \n                    \n                      \n                        Slides\n                      \n                    \n                  \n                \n              \n            \n          \n        \n\n        \n\n      \n     \n  \n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#formation-aux-bonnes-pratiques-avec-git-et",
    "href": "index.html#formation-aux-bonnes-pratiques-avec-git-et",
    "title": "Formation aux bonnes pratiques `Git` et `R`",
    "section": "",
    "text": "Un parcours de formation construit par l’Insee.\nTous les supports sont sur le Github InseeFrLab   \n\n\n\n\n  \n     \n      \n        \n          \n            \n          \n         \n        \n          \n            \n            \n\n            \n              \nVersion allégée de la formation aux bonnes pratiques en\nR et en Git, axée autour de\nl'apprentissage de Git, de la structure des projets R et\nde la qualité du code R\n\n\nVersion en une journée\n\n            \n\n            \n            \n              \n                \n              \n            \n            \n            \n              \n                \n                  \n                    \n                      \n                        Slides\n                      \n                    \n                  \n                \n              \n            \n          \n        \n\n        \n\n      \n     \n  \n\n  \n     \n      \n        \n          \n            \n          \n         \n        \n          \n            \n            \n\n            \n              \nVersion complète de la formation aux bonnes pratiques en\nR et en Git, axée autour de la notion de\nreproductibilité et de la collaboration.\n\n\nVersion en deux jours\n\n            \n\n            \n            \n              \n                \n              \n            \n            \n            \n              \n                \n                  \n                    \n                      \n                        Slides\n                      \n                    \n                  \n                \n              \n            \n          \n        \n\n        \n\n      \n     \n  \n\n  \n     \n      \n        \n          \n            \n          \n         \n        \n          \n            \n            \n\n            \n              \nVersion plus succincte pour sensibiliser les\nresponsables hiérarchiques au sujet\ndes bonnes pratiques de code\nR et en Git.\n\n\nVersion 1/2 journée\n\n            \n\n            \n            \n              \n                \n              \n            \n            \n            \n              \n                \n                  \n                    \n                      \n                        Slides\n                      \n                    \n                  \n                \n              \n            \n          \n        \n\n        \n\n      \n     \n  \n\n  \n     \n      \n        \n          \n            \n          \n         \n        \n          \n            \n            \n\n            \n              \nPrésentation rapide sous forme de teasing\nde la formation aux bonnes pratiques en\nR et en Git.\n\n\nVersion en 1h\n\n            \n\n            \n            \n              \n                \n              \n            \n            \n            \n              \n                \n                  \n                    \n                      \n                        Slides\n                      \n                    \n                  \n                \n              \n            \n          \n        \n\n        \n\n      \n     \n  \n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#crédits",
    "href": "index.html#crédits",
    "title": "Formation aux bonnes pratiques `Git` et `R`",
    "section": "Crédits",
    "text": "Crédits\nCette formation a été conçue de manière collaborative par des équipes de l’Insee et coordonnée par Romain Avouac et Lino Galiana.\nElle a bénéficié des contributions de : Romain Avouac, Julien Blasco, Thomas Faria, Lino Galiana, Pierre Lamarche, Romain Lesur Olivier Meslin, Julien Pramil, Olivier Pucher, Clément Rousset, Mohamed Seikouri et Tom Seimandi.\nLes supports et le code source (Github InseeFrLab ) sont librement réutilisables et disponibles sous licence MIT."
  },
  {
    "objectID": "slides/complete.html#introduction",
    "href": "slides/complete.html#introduction",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Introduction",
    "text": "Introduction\n\n\nVersion longue de la formation aux bonnes pratiques avec R et Git (page d’accueil)"
  },
  {
    "objectID": "slides/complete.html#la-notion-de-bonnes-pratiques",
    "href": "slides/complete.html#la-notion-de-bonnes-pratiques",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "La notion de bonnes pratiques",
    "text": "La notion de bonnes pratiques\n\nOrigine : communauté des développeurs logiciels\nConstats :\n\nle “code est plus souvent lu qu’écrit” (Guido Van Rossum)\nla maintenance d’un code est très coûteuse\n\nConséquence : un ensemble de règles informelles, conventionnellement acceptées comme produisant des logiciels fiables, évolutifs et maintenables"
  },
  {
    "objectID": "slides/complete.html#pourquoi-sintéresser-aux-bonnes-pratiques",
    "href": "slides/complete.html#pourquoi-sintéresser-aux-bonnes-pratiques",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Pourquoi s’intéresser aux bonnes pratiques ?",
    "text": "Pourquoi s’intéresser aux bonnes pratiques ?\n\nL’activité du statisticien / datascientist tend à se rapprocher de celle du développeur :\n\nprojets intenses en code\nprojets collaboratifs et de grande envergure\ncomplexification des données et donc des infrastructures\ndéploiement d’applications pour valoriser les analyses"
  },
  {
    "objectID": "slides/complete.html#bonnes-pratiques-et-reproductibilité",
    "href": "slides/complete.html#bonnes-pratiques-et-reproductibilité",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Bonnes pratiques et reproductibilité",
    "text": "Bonnes pratiques et reproductibilité\n\n\n\n\n\nSource : Peng R., Reproducible Research in Computational Science, Science (2011)\n\nUne reproductibilité parfaite est coûteuse\nGit est un standard atteignable et efficient\n\n\n\n\n\n\n\n\nNote\n\n\nQuel socle de bonnes pratiques pour les projets statistiques en  ?"
  },
  {
    "objectID": "slides/complete.html#horizon-de-cette-formation",
    "href": "slides/complete.html#horizon-de-cette-formation",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Horizon de cette formation",
    "text": "Horizon de cette formation\nUn point de départ commun"
  },
  {
    "objectID": "slides/complete.html#horizon-de-cette-formation-1",
    "href": "slides/complete.html#horizon-de-cette-formation-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Horizon de cette formation",
    "text": "Horizon de cette formation\nUn point de départ commun \nUne structuration de projet plus viable"
  },
  {
    "objectID": "slides/complete.html#plan-de-la-partie",
    "href": "slides/complete.html#plan-de-la-partie",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Plan de la partie",
    "text": "Plan de la partie\n1️⃣ Le contrôle de version : pourquoi faire ?\n2️⃣ Le contrôle de version avec Git\n3️⃣ Le travail collaboratif avec Git"
  },
  {
    "objectID": "slides/complete.html#archiver-son-code-proprement",
    "href": "slides/complete.html#archiver-son-code-proprement",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Archiver son code proprement",
    "text": "1️⃣ Archiver son code proprement\npour en finir avec ça :"
  },
  {
    "objectID": "slides/complete.html#archiver-son-code-proprement-1",
    "href": "slides/complete.html#archiver-son-code-proprement-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Archiver son code proprement",
    "text": "1️⃣ Archiver son code proprement\nou ça :"
  },
  {
    "objectID": "slides/complete.html#archiver-son-code-proprement-2",
    "href": "slides/complete.html#archiver-son-code-proprement-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Archiver son code proprement",
    "text": "1️⃣ Archiver son code proprement\nou encore ça :\nprior &lt;- read_csv(prior_path)\nprior &lt;- prior %&gt;%\n    select(id, proba_inter, proba_build, proba_rfl) %&gt;%\n    separate(id, into = c('nidt', 'grid_id'), sep = \":\") %&gt;%\n    group_by(nidt) %&gt;%\n    mutate(\n        proba_build = proba_build/sum(proba_build),\n        proba_rfl = proba_rfl/sum(proba_rfl),\n        ) %&gt;%\n    unite(col = \"id\", nidt, grid_id, sep = \":\")\n\n# Test\n# prior_test &lt;- prior %&gt;%\n#    mutate(\n#        proba_inter = round(proba_inter, 4)\n#        proba_build = round(proba_build, 4)\n#        proba_rfl = round(proba_rfl, 4)\n#    )\n\nwrite_csv(prior_round, \"~/prior.csv\")"
  },
  {
    "objectID": "slides/complete.html#archiver-son-code-proprement-3",
    "href": "slides/complete.html#archiver-son-code-proprement-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Archiver son code proprement",
    "text": "1️⃣ Archiver son code proprement\nPour arriver à ça :\n\n\n\n\n\nSource : ThinkR"
  },
  {
    "objectID": "slides/complete.html#voyager-dans-le-temps-de-votre-projet",
    "href": "slides/complete.html#voyager-dans-le-temps-de-votre-projet",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "2️⃣ Voyager dans le temps (de votre projet)",
    "text": "2️⃣ Voyager dans le temps (de votre projet)"
  },
  {
    "objectID": "slides/complete.html#une-collaboration-simplifiée-et-efficace",
    "href": "slides/complete.html#une-collaboration-simplifiée-et-efficace",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "3️⃣ Une collaboration simplifiée et efficace",
    "text": "3️⃣ Une collaboration simplifiée et efficace\nUn modèle distribué\n\n\n\n\n\nSource : specbee.com"
  },
  {
    "objectID": "slides/complete.html#une-collaboration-simplifiée-et-efficace-1",
    "href": "slides/complete.html#une-collaboration-simplifiée-et-efficace-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "3️⃣ Une collaboration simplifiée et efficace",
    "text": "3️⃣ Une collaboration simplifiée et efficace\nQui permet l’expérimentation en toute sécurité\n\nSource : lutece.paris.fr"
  },
  {
    "objectID": "slides/complete.html#une-collaboration-simplifiée-et-efficace-2",
    "href": "slides/complete.html#une-collaboration-simplifiée-et-efficace-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "3️⃣ Une collaboration simplifiée et efficace",
    "text": "3️⃣ Une collaboration simplifiée et efficace\nQuel que soit l’environnement de travail"
  },
  {
    "objectID": "slides/complete.html#une-collaboration-simplifiée-et-efficace-3",
    "href": "slides/complete.html#une-collaboration-simplifiée-et-efficace-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "3️⃣ Une collaboration simplifiée et efficace",
    "text": "3️⃣ Une collaboration simplifiée et efficace\nAvec des outils pour faciliter la collaboration"
  },
  {
    "objectID": "slides/complete.html#partager-son-code-à-un-public-large",
    "href": "slides/complete.html#partager-son-code-à-un-public-large",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "4️⃣ Partager son code à un public large",
    "text": "4️⃣ Partager son code à un public large\nUne vitrine pour les projets et l’organisation"
  },
  {
    "objectID": "slides/complete.html#en-résumé",
    "href": "slides/complete.html#en-résumé",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "En résumé",
    "text": "En résumé\n\nConstruire et naviguer à travers l’historique de son projet\nLa collaboration rendue simple et efficace\nAméliorer la reproductibilité de ses projets\nAméliorer la visibilité de ses projets"
  },
  {
    "objectID": "slides/complete.html#git-est-complexe",
    "href": "slides/complete.html#git-est-complexe",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "⚠️ Git est complexe",
    "text": "⚠️ Git est complexe\nL’utilisation de Git nécessite certaines notions préalables:\n\nFonctionnement d’un filesystem\nConnaissance basique du terminal Linux\nPotentiellement, un grand nombre de commandes\n\n\n\n\n\nSource : iulianacosmina.com"
  },
  {
    "objectID": "slides/complete.html#git-est-complexe-1",
    "href": "slides/complete.html#git-est-complexe-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "⚠️ Git est complexe",
    "text": "⚠️ Git est complexe\nMais\n\nL’usage quotidien n’implique que quelques commandes\nLes messages de Git sont très informatifs\nEnormément de ressources disponibles sur internet\nDes interfaces visuelles (ex: RStudio, Sublime Merge, VS Code) qui facilitent l’apprentissage\nUn petit investissement individuel pour de gros gains collectifs"
  },
  {
    "objectID": "slides/complete.html#concepts",
    "href": "slides/complete.html#concepts",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Concepts",
    "text": "Concepts\nGit, GitHub, GitLab… quelles différences ?\n\nGit est un logiciel ;\nUtilisation en ligne de commandes\nDifférentes interfaces graphiques (RStudio, VS Code…)"
  },
  {
    "objectID": "slides/complete.html#concepts-1",
    "href": "slides/complete.html#concepts-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Concepts",
    "text": "Concepts\nGit, GitHub, GitLab… quelles différences ?\n\nGitHub et GitLab sont des forges logicielles\nForge: espace d’archivage de code\nDes fonctionalités supplémentaires : réseau social du code\n\n\n\n\n\n\n\nAstuce\n\n\n\nGitHub : utilisation pour les projets open-source\nGitLab : utilisation pour les projets internes"
  },
  {
    "objectID": "slides/complete.html#concepts-2",
    "href": "slides/complete.html#concepts-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Concepts",
    "text": "Concepts\nDépôt local / dépôt distant (remote)\n\n\n\n\n\n\nPar défaut, le dépôt distant porte l’alias origin"
  },
  {
    "objectID": "slides/complete.html#concepts-3",
    "href": "slides/complete.html#concepts-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Concepts",
    "text": "Concepts\nWorkflow local\n\n\n\n\n\nSource : Git Documentation"
  },
  {
    "objectID": "slides/complete.html#concepts-4",
    "href": "slides/complete.html#concepts-4",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Concepts",
    "text": "Concepts\nWorkflow complet\n\n\n\nSource : itnext.io"
  },
  {
    "objectID": "slides/complete.html#commandes-essentielles",
    "href": "slides/complete.html#commandes-essentielles",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Commandes essentielles",
    "text": "Commandes essentielles\n\n\n\n\nAction\nCommande\n\n\n\n\nCloner un projet\ngit clone [url-to-git-repo]\n\n\nAfficher les changements\ngit status\n\n\nRetrouver l’URL du dépôt distant\ngit remote -v"
  },
  {
    "objectID": "slides/complete.html#commandes-essentielles-1",
    "href": "slides/complete.html#commandes-essentielles-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Commandes essentielles",
    "text": "Commandes essentielles\n\n\n\n\n\n\n\n\nAction\nCommande\n\n\n\n\nAjouter des changements à l’index de Git (stage fixes)\nUn seul fichier : git add &lt;file-name&gt;  Tous les fichiers déjà indexés : git add -u  Tous les fichiers ⚠️ : git add -A\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\nLa méthode git add -A peut amener à suivre les modifications de fichiers qui ne devraient pas l’être (par exemple, des données).\nIl est recommandé de bien réfléchir avant de l’utiliser (ou d’avoir un bon .gitignore)"
  },
  {
    "objectID": "slides/complete.html#commandes-essentielles-2",
    "href": "slides/complete.html#commandes-essentielles-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Commandes essentielles",
    "text": "Commandes essentielles\n\n\n\n\n\n\n\n\nAction\nCommande\n\n\n\n\nFaire un commit\ngit commit -m \"message\"\n\n\nPousser les changements locaux vers le dépôt distant (branche master)\ngit push origin master\n\n\nRécupérer les changements sur le dépôt distant (branche master)\ngit pull origin master"
  },
  {
    "objectID": "slides/complete.html#modes-dauthentification",
    "href": "slides/complete.html#modes-dauthentification",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Modes d’authentification",
    "text": "Modes d’authentification\n\n\n insee\n\n\n\n\nhttps\n\ngit clone https://github.com/username/projet.git\nsimple à utiliser\nauthentification username + password (ou token) à chaque push\n\nssh\n\ngit clone git@github.com:username/projet.git\n(plus) complexe à initialiser\nauthentification automatique\n\n\n\n\n\n\n\nhttps\n\ngit clone https://gitlab.insee.fr/username_or_groupname/projet.git\nsimple à utiliser\nauthentification username + password (ou token) à chaque push\n\nssh\n\ngit clone git@gitlab.insee.fr:username_or_groupname/projet.git\n(plus) complexe à initialiser\nauthentification automatique"
  },
  {
    "objectID": "slides/complete.html#application-0",
    "href": "slides/complete.html#application-0",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 0",
    "text": "Application 0\n\n insee\n\n\n\n\n\nPréparation de l’environnement de travail\n\n\n\n\nCréer un compte GitHub\nCréer un nouveau dépôt privé sur GitHub en incluant un fichier README\nCréer un compte sur le SSP Cloud\nLancer un service RStudio. Dans l’onglet de configuration Git du service, fixer la durée du Cache pour le stockage des identifiants GitHub à une valeur suffisamment élevée\nCloner le dépôt distant sur votre environnement local (ici, le RStudio du Datalab):\n\nFile → New project → Version Control → Git\n\nGénérer un token (jeton d’authentification) sur GitHub\nStocker le token sur le SSP Cloud (ou un gestionnaire de mot de passe) :\n\nMon Compte -&gt; Git -&gt; Token d'accès personnel pour Forge Git\n\nTerminer la procédure de clonage en fournissant le nom d’utilisateur GitHub et le token\n\n\n\n\n\n\n\n\n\n\nPréparation de l’environnement de travail\n\n\n\n\nCompte déjà créé sur le gitlab interne\nCréer un nouveau dépôt privé sur gitlab.insee.fr\nCréer un compte sur LS3 via AUS.\nLancer un service RStudio. Dans l’onglet de configuration Git du service, fixer la durée du Cache pour le stockage des identifiants Gitlab à une valeur suffisamment élevée\nCloner le dépôt distant sur votre environnement local (ici, le RStudio de la plateforme LS3):\n\nFile → New project → Version Control → Git\n\nGénérer un token (jeton d’authentification) sur gitlab.insee.fr\nStocker le token sur LS3 (ou un gestionnaire de mot de passe) :\n\nMon Compte -&gt; Git -&gt; Token d'accès personnel pour Forge Git\n\nTerminer la procédure de clonage en fournissant le nom d’utilisateur (IDEP) et le token\n\n\n\n\n\n\n\n\n❓ Question : qu’est ce qui différencie le projet cloné d’un projet quelconque ?"
  },
  {
    "objectID": "slides/complete.html#application-1",
    "href": "slides/complete.html#application-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 1",
    "text": "Application 1\n\n\n\nPremiers commits\n\n\n\n\nCréer un dossier 📁 scripts\nY créer les fichiers script1.R et script2.R, chacun contenant quelques commandes R de votre choix\nAjouter ces fichiers à la zone de staging de Git en les cochant dans l’interface RStudio\nEffectuer un commit, auquel on donnera un message descriptif pertinent\nSupprimer le fichier script1.R et modifier le contenu du fichier script2.R\nAnalyser ce qui se passe lorsque l’on coche ces fichiers dans l’interface RStudio\nEffectuer un nouveau commit pour ajouter ces modifications à l’historique\nVisualiser l’historique du projet à partir de l’interface graphique de RStudio\n\n\n\n\n\n❓ Question : à ce stade, le dépôt du projet sur GitHub / Gitlab (remote) a-t-il été modifié ?"
  },
  {
    "objectID": "slides/complete.html#application-2",
    "href": "slides/complete.html#application-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 2",
    "text": "Application 2\n\n\n\nInteractions avec le dépôt distant\n\n\n\n\nEffectuer un push pour intégrer les changements locaux au projet distant\nParcourir l’historique du projet sur GitHub / Gitlab\n\nFaire apparaître les différences entre deux versions consécutives du projet\nAfficher une version passée du projet"
  },
  {
    "objectID": "slides/complete.html#bonnes-pratiques",
    "href": "slides/complete.html#bonnes-pratiques",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Bonnes pratiques",
    "text": "Bonnes pratiques\nQue versionne-t-on ?\n\nEssentiellement du code source\nPas d’outputs (fichiers .html, .pdf, modèles…)\nPas de données, d’informations locales ou sensibles\n\n\n\n\n\n\n\n\nNote\n\n\nPour définir des règles qui évitent de committer tel ou tel fichier, on utilise un fichier nommé .gitignore.\nSi on mélange du code et des éléments annexes (output, données…) dans un même dossier, il faut consacrer du temps à ce fichier.\nDes modèles de .gitignore existent sur internet, par exemple celui-ci pour les projets .\nN’hésitez pas à y ajouter des règles conservatrices (par exemple *.csv), comme cela est expliqué dans la documentation utilitR."
  },
  {
    "objectID": "slides/complete.html#bonnes-pratiques-1",
    "href": "slides/complete.html#bonnes-pratiques-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Bonnes pratiques",
    "text": "Bonnes pratiques\nFormat des commits\n\n\n\n\n\n\n\nFréquence\n\nAussi souvent que possible\nLe lot de modifications doit “avoir du sens”\n\nMessages\n\nCourts et informatifs (comme un titre de mail)\nDécrire le pourquoi plutôt que le comment dans le texte"
  },
  {
    "objectID": "slides/complete.html#application-3",
    "href": "slides/complete.html#application-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 3",
    "text": "Application 3\n\n\n\nLe fichier .gitignore\n\n\n\nL’objectif de cette application est de créer le fichier .gitignore, qui permet de spécifier l’ensemble des fichiers et/ou dossiers que l’on souhaite exclure de l’indexation faite par Git. Il doit se situer à la racine du projet.\n\nCréer un fichier texte nommé .gitignore à la racine du projet (attention à ne pas ajouter d’extension au fichier, type .txt)\nCréer un dossier data à la racine du projet et créer à l’intérieur de celui-ci un fichier data/raw.csv avec une ligne de données quelconque\nAjouter une première règle au fichier .gitignore qui exclue le dossier data/, et vérifier que la règle fonctionne\nAjouter une seconde règle excluant tous les fichiers de type *.pdf et *.html, et vérifier que la règle fonctionne\n\n\n\n\n\n❓ Question : que se passe-t-il lorsque l’on ajoute au .gitignore des fichiers qui ont déjà été commit sur le projet Git ?\n\n\n\n\nDes fichiers .gitignore standards\n\n\nDans cette application, nous avons généré le fichier .gitignore manuellement. En pratique, il existe des .gitignore standards adaptés pour chaque langage de programmation, qui implémentent déjà de nombreuses règles pertinentes. Le mieux est donc de partir du .gitignore R pour tout nouveau projet R, et de rajouter les règles spécifiques que l’on souhaite appliquer au projet."
  },
  {
    "objectID": "slides/complete.html#outils-pour-le-travail-collaboratif",
    "href": "slides/complete.html#outils-pour-le-travail-collaboratif",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Outils pour le travail collaboratif",
    "text": "Outils pour le travail collaboratif\n\nL’éco-système Git facilite le travail collaboratif\n\nGit  : modèle des branches\nGitHub  / GitLab  : Issues, Pull Requests, Forks\n\nCes outils ne remplacent pas une bonne définition de l’organisation du travail en équipe\n\nChoix d’un workflow\nDroits d’accès\nRègles de contribution"
  },
  {
    "objectID": "slides/complete.html#application-4",
    "href": "slides/complete.html#application-4",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 4",
    "text": "Application 4\n\n\n\nSynchronisation des dépôts\n\n\n\n\nSe mettre par groupes de 3/4 personnes:\n\nUne personne aura la responsabilité d’être mainteneur\nDeux à trois personnes seront développeurs\n\nLe mainteneur crée un dépôt sur Github / Gitlab. Il/Elle donne des droits au(x) développeur(s) du projet\nCréer une copie locale (clone) du projet sur son service RStudio\nCréer un fichier &lt;votre_nom&gt;-&lt;votre_prenom&gt;.md. Écrire dedans trois phrases de son choix sans ponctuation ni majuscules, puis commit et push les modifications\nÀ ce stade, une seule personne (la plus rapide) devrait ne pas avoir rencontré de rejet du push. C’est normal ! Le premier ayant fait un push a modifié le dépôt commun ; les autres doivent intégrer ces modifications dans leur version locale (pull) avant d’avoir le droit de proposer un changement.\nNéanmoins, le pull renvoie également une erreur : Git ne parvient pas à résoudre la divergence d’historique. Essayons de comprendre le problème et les solutions possibles."
  },
  {
    "objectID": "slides/complete.html#divergence-dhistoriques-cas-simple",
    "href": "slides/complete.html#divergence-dhistoriques-cas-simple",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Divergence d’historiques : cas simple",
    "text": "Divergence d’historiques : cas simple\n\n\nGit résout le problème via un fast-forward merge\n\nLe commit distant est rajouté à l’historique local\nLes dépôts sont synchronisés"
  },
  {
    "objectID": "slides/complete.html#divergence-dhistoriques-cas-compliqué",
    "href": "slides/complete.html#divergence-dhistoriques-cas-compliqué",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Divergence d’historiques : cas compliqué",
    "text": "Divergence d’historiques : cas compliqué\n\n\nGit ne peut pas résoudre de lui même la divergence\nDeux stratégies possibles\n\nLe merge\nLe rebase"
  },
  {
    "objectID": "slides/complete.html#ère-possibilité-le-merge",
    "href": "slides/complete.html#ère-possibilité-le-merge",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1ère possibilité : le merge",
    "text": "1ère possibilité : le merge\n\n\nGit crée un commit de merge\n\nComportement par défaut (jusqu’à récemment)\n\nInconvénient : rend l’historique non-linéaire (plus d’explications)"
  },
  {
    "objectID": "slides/complete.html#ème-possibilité-le-rebase-12",
    "href": "slides/complete.html#ème-possibilité-le-rebase-12",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "2ème possibilité : le rebase (1/2)",
    "text": "2ème possibilité : le rebase (1/2)\n\n\nGit effectue 3 étapes\n\nSupprime temporairement le commit local\nRéalise un fast-forward merge\nRajoute le commit local au bout de l’historique"
  },
  {
    "objectID": "slides/complete.html#ème-possibilité-le-rebase-22",
    "href": "slides/complete.html#ème-possibilité-le-rebase-22",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "2ème possibilité : le rebase (2/2)",
    "text": "2ème possibilité : le rebase (2/2)\n\n\nAvantage : l’historique reste linéaire\nAttention : ne jamais rebase des commits déjà poussés sur un dépôt public (plus d’explications)"
  },
  {
    "objectID": "slides/complete.html#application-4-1",
    "href": "slides/complete.html#application-4-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 4",
    "text": "Application 4\n\n\n\nSynchronisation des dépôts\n\n\n\n\nDans notre cas, on va conserver le précédent défaut (le commit de merge). Comme l’interface RStudio ne permet pas (encore) de sélectionner la stratégie de pull, on va préciser la configuration voulue via une commande passée dans le terminal\n\ngit config pull.rebase false\n\nPour ceux dont le push a été refusé, effectuer un pull des modifications distantes via l’interface RStudio\nEffectuer à nouveau un push de vos modifications locales\nLes derniers membres du groupe devront refaire les étapes précédentes, potentiellement plusieurs fois, pour pouvoir push leurs modifications locales\n\n\n\n\n\n❓ Question : que se serait-il passé si les différents membres du groupe avaient effectué leurs modifications sur un seul et même fichier ?"
  },
  {
    "objectID": "slides/complete.html#application-5",
    "href": "slides/complete.html#application-5",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 5",
    "text": "Application 5\n\n\n\nRésoudre les conflits\n\n\n\n\nOn se place dans la même configuration que dans l’application précédente : un mainteneur et deux/trois développeurs\nLe mainteneur modifie le contenu de son fichier, puis commit et push les modifications\nSans faire de pull préalable, les développeurs modifient également le contenu du fichier du mainteneur, puis commit et push les modifications\nLe push est rejeté pour la même raison que dans l’application précédente : les dépôts ne sont plus synchronisés, il faut pull les changements distants au préalable. Mais cette fois, le pull est également rejeté : il y a un conflit entre l’historique du projet distant et celui du projet local. Git nous indique qu’il faut résoudre le conflit avant de pouvoir modifier l’historique du projet.\nUtiliser l’interface de RStudio pour résoudre le conflit, en choisissant la version du fichier que vous souhaitez conserver, puis commit/push les modifications\nComme dans l’application précédente, seul le développeur le plus rapide parvient à push. Les autres doivent répéter l’opération.\n\n\n\n\n\n❓ Question : comment limiter au maximum la survenue des conflits d’historique ?"
  },
  {
    "objectID": "slides/complete.html#le-modèle-des-branches",
    "href": "slides/complete.html#le-modèle-des-branches",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Le modèle des branches",
    "text": "Le modèle des branches"
  },
  {
    "objectID": "slides/complete.html#le-modèle-des-branches-1",
    "href": "slides/complete.html#le-modèle-des-branches-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Le modèle des branches",
    "text": "Le modèle des branches"
  },
  {
    "objectID": "slides/complete.html#exemple-dorganisation-le-github-flow",
    "href": "slides/complete.html#exemple-dorganisation-le-github-flow",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Exemple d’organisation : le GitHub flow",
    "text": "Exemple d’organisation : le GitHub flow\n\nDescription plus détaillée : ici"
  },
  {
    "objectID": "slides/complete.html#application-6",
    "href": "slides/complete.html#application-6",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 6",
    "text": "Application 6\n\n\n\nBranches, issues et pull requests\n\n\n\n\nSur Github / Gitlab, chaque personne ouvre une Issue sur le même dépôt que les applications précédentes, dans laquelle vous suggérez une modification à apporter à votre projet\nCréer une branche dont le nom indique la modification que vous allez apporter (ex : ajout-authentification)\nEffectuer un commit avec les modifications de votre choix, puis pousser les changements sur une nouvelle branche du dépôt distant\nOuvrir une Pull Request (PR) pour proposer d’intégrer vos changements sur la branche principale du dépôt distant. Spécifier que l’acceptation de la Pull Request entraînera la fermeture automatique de l’Issue associée en écrivant dans le corps de la PR : close #N où N est le numéro de l’Issue en question\nChaque personne effectue finalement une review d’une PR d’un autre membre de l’équipe, suite à quoi les différentes PR peuvent être fusionnées\n\n\n\n\n\n❓ Question : quelle organisation pour merge dans la branche principale ?"
  },
  {
    "objectID": "slides/complete.html#application-7",
    "href": "slides/complete.html#application-7",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 7",
    "text": "Application 7\n\n\n\nContribuer à un projet collaboratif\n\n\nL’objectif de cette application est d’initier au mode de contribution à un dépôt collaboratif. Concrètement, vous allez ouvrir une Issue sur un dépôt d’un autre développeur, en proposant des modifications. Puis, comme vous êtes très motivés, vous allez soumettre une Pull Request qui propose une solution à l’Issue.\n\n\nOuvrir une Issue sur le dépôt git-exo en suggérant une modification à apporter au fichier README.md\nSur GitHub, faire un Fork du dépôt git-exo\nCréer une branche portant un nom pertinent au vu de la modification que vous voulez apporter\nEffectuer un commit avec les modifications de votre choix, puis pousser les changements sur votre Fork\nOuvrir une Pull Request (PR) pour proposer d’intégrer vos changements dans la branche principale (main) du dépôt git-exo\nDans le corps de votre PR, indiquez close #N où N est le numéro de votre Issue. Comme ça, lorsque la PR sera acceptée, l’Issue initiale sera automatiquement fermée !\n\n\n\n\n\n❓ Question : pourquoi, avec un fork, est-il très important de toujours effectuer une Pull Request à partir d’une branche différente de la branche principale ?"
  },
  {
    "objectID": "slides/complete.html#ressources-supplémentaires",
    "href": "slides/complete.html#ressources-supplémentaires",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Ressources supplémentaires",
    "text": "Ressources supplémentaires\n\nLa documentation utilitR propose plusieurs chapitres sur Git\nCours Reproductibilité et bonnes pratiques pour les projets de data science de l’ENSAE\nLa Bible de l’usage de Git"
  },
  {
    "objectID": "slides/complete.html#plan-de-la-partie-1",
    "href": "slides/complete.html#plan-de-la-partie-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Plan de la partie",
    "text": "Plan de la partie\n1️⃣ Qualité du code\n2️⃣ Structure des projets\n3️⃣ Formats de données\n4️⃣ Environnements reproductibles\n5️⃣ R en production"
  },
  {
    "objectID": "slides/complete.html#application-0-1",
    "href": "slides/complete.html#application-0-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 0",
    "text": "Application 0\n\n insee\n\n\n\n\n\nPréparation de l’environnement de travail\n\n\n\n\nCréer un dépôt sur Github  en incluant un fichier README et un .gitignore (chercher le modèle R dans les suggestions)\nLancer un service RStudio. Dans l’onglet de configuration Git du service, fixer la durée du Cache pour le stockage des identifiants GitHub à une valeur suffisamment élevée (conseil: 36000)\nCloner le dépôt distant sur votre environnement local (ici, le RStudio du Datalab):\n\nFile → New project → Version Control → Git\n\nCréer un script get_data.R en copiant le contenu de ce fichier, puis l’exécuter\nCréer le script script.R dans votre dépôt en copiant le contenu de ce fichier. Ne l’exécutez pas, c’est l’objet de l’exercice suivant.\nAjouter la règle “RPindividus*” au fichier .gitignore. Que signifie-t-elle ?\nCommit/push les changements (tous les fichiers, y compris ceux que Git a ajouté)\n\n\n\n\n\n\n\n\n\n\nPréparation de l’environnement de travail\n\n\n\n\nCréer un nouveau dépôt public sur GitLab\nLancer un service RStudio. Dans l’onglet de configuration Git du service, fixer la durée du Cache pour le stockage des identifiants GitLab à une valeur suffisamment élevée\nCloner le dépôt distant sur votre environnement local (ici, le RStudio de LS3):\n\nFile → New project → Version Control → Git\n\nCréer un script get_data.R en copiant le contenu de ce fichier, puis l’exécuter\nCréer le script script.R dans votre dépôt en copiant le contenu de ce fichier\nAjouter la règle “individu_reg.*” au fichier .gitignore. Que signifie-t-elle ?\nCommit/push les changements"
  },
  {
    "objectID": "slides/complete.html#enjeux",
    "href": "slides/complete.html#enjeux",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Enjeux",
    "text": "Enjeux\n\nD’une vision utilitariste du code à une vision du code comme outil de communication\nFavoriser la lisibilité et la maintenabilité\nFaciliter la réutilisation\nAssurer la transparence méthodologique"
  },
  {
    "objectID": "slides/complete.html#principes-généraux",
    "href": "slides/complete.html#principes-généraux",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Principes généraux",
    "text": "Principes généraux\n1️⃣ Adopter les standards communautaires\n2️⃣ Eviter la duplication de code\n3️⃣ (Auto)-documenter son code\n4️⃣ Isoler la configuration du code"
  },
  {
    "objectID": "slides/complete.html#adopter-les-standards-communautaires",
    "href": "slides/complete.html#adopter-les-standards-communautaires",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Adopter les standards communautaires",
    "text": "1️⃣ Adopter les standards communautaires\n\n“Good coding style is like correct punctuation: you can manage without it, butitsuremakesthingseasiertoread”\nTidyverse Style Guide\n\n\nRespecter les conventions du langage dans lequel il est rédigé\nIl existe un guide de référence pour bien coder en R : le Tidyverse style guide."
  },
  {
    "objectID": "slides/complete.html#adopter-les-standards-communautaires-1",
    "href": "slides/complete.html#adopter-les-standards-communautaires-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Adopter les standards communautaires",
    "text": "1️⃣ Adopter les standards communautaires\nDeux outils pratiques aident à respecter les standards :\n\nlinter : programme qui vérifie que le code est formellement conforme à un certain guidestyle\n\nsignale problèmes formels, sans corriger\n\nformatter : programme qui reformate un code pour le rendre conforme à un certain guidestyle\n\nmodifie directement le code\n\n\n\n\n\n\n\n\n\nAstuce\n\n\n\n\nExemples d’erreurs repérées par un linter :\n\nlignes de code trop longues ou mal indentées, parenthèses non équilibrées, noms de fonctions mal construits…\n\nExemples d’erreurs non repérées par un linter :\n\nfonctions mal utilisées, arguments mal spécifiés, structure du code incohérente, code insuffisamment documenté…"
  },
  {
    "objectID": "slides/complete.html#adopter-les-standards-communautaires-2",
    "href": "slides/complete.html#adopter-les-standards-communautaires-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Adopter les standards communautaires",
    "text": "1️⃣ Adopter les standards communautaires\n\nDans le cas de  :\n\nle linter à utiliser est le package lintr\nle formatter à utiliser est le package styler.\n\nExiste également le package formatR."
  },
  {
    "objectID": "slides/complete.html#utiliser-des-fonctions",
    "href": "slides/complete.html#utiliser-des-fonctions",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "2️⃣ Utiliser des fonctions",
    "text": "2️⃣ Utiliser des fonctions\n\n\n\n\n\n\nRègle d’or\n\n\nIl faut utiliser une fonction dès qu’on utilise une même portion de code plus de deux fois (don’t repeat yourself (DRY))\n\n\n\n\nLimite les risques d’erreurs liés aux copier/coller\nRend le code plus lisible et plus compact\nUn seul endroit du code à modifier lorsqu’on souhaite modifier le traitement\nFacilite la réutilisation et la documentation du code !\n\n\n\n\n\n\n\n\nRègles pour écrire des fonctions pertinentes\n\n\n\n\nUne tâche = une fonction\nUne tâche complexe = un enchaînement de fonctions réalisant chacune une tâche simple\nLimiter l’utilisation de variables globales."
  },
  {
    "objectID": "slides/complete.html#documenter-son-code",
    "href": "slides/complete.html#documenter-son-code",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "3️⃣ Documenter son code",
    "text": "3️⃣ Documenter son code\n\nGrands principes :\n\nDocumenter le pourquoi plutôt que le comment\nPrivilégier l’auto-documentation\n\n\n\n\n\n\n\n\n\nComment bien documenter un script ?\n\n\n\n\nMinimum 🚦 : commentaire au début du script pour décrire ce qu’il fait\nBien 👍 : commenter les parties “délicates” du code\nIdéal 💪 : documenter ses fonctions avec la syntaxe roxygen2."
  },
  {
    "objectID": "slides/complete.html#documenter-son-code-1",
    "href": "slides/complete.html#documenter-son-code-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "3️⃣ Documenter son code",
    "text": "3️⃣ Documenter son code\n\n\n\n\n\n\nL’auto-documentation en pratique\n\n\n👎 La documentation pallie des mauvais nommages\n# Utilise string si x est non manquant et non vide\nif (!is.na(x) && nzchar(x)) {\n  use_string(x)\n}\n👍 Les nommages suffisent à comprendre le code\nx_is_not_empty_string &lt;- (!is.na(x) && nzchar(x))\nif (x_is_not_empty_string) {\n  use_string(x)\n}"
  },
  {
    "objectID": "slides/complete.html#isoler-la-configuration-du-code",
    "href": "slides/complete.html#isoler-la-configuration-du-code",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "4️⃣ Isoler la configuration du code",
    "text": "4️⃣ Isoler la configuration du code\n\nRappel : on vise une structure modulaire\n\n\n\n\nEn pratique : isoler les packages et les secrets"
  },
  {
    "objectID": "slides/complete.html#gestion-des-packages",
    "href": "slides/complete.html#gestion-des-packages",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "4️⃣ Gestion des packages",
    "text": "4️⃣ Gestion des packages\n\nExternaliser l’installation des packages nécessaires\n\nLe code ne doit pas modifier l’environnement\nOù ? Dans le README ou des fichiers spécialisés (DESCRIPTION ou renv.lock)\n\nExpliciter l’appel des packages avec la syntaxe package::fonction()\n\nFavorise la lisibilité du code\nLimite les risques de fonctions “masquées”\n\n\n\n\n\n\n\n\n\nExemple\n\n\n\n\npackage1 et package2 contiennent chacun une fonction appelée super_fonction.\nSi package2 est chargé après package1, alors la fonction de package1 est automatiquement masquée et super_fonction désigne par défaut la fonction de package2.\nMieux vaut noter package1::superFonction et package2::superFonction"
  },
  {
    "objectID": "slides/complete.html#gestion-des-secrets",
    "href": "slides/complete.html#gestion-des-secrets",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "4️⃣ Gestion des secrets",
    "text": "4️⃣ Gestion des secrets\n\nLes secrets (mots de passe, tokens, etc.) sont des données sensibles\nQuelques principes de sécurité essentiels\n\nUtiliser des tokens plutôt que des mots de passe\nUtiliser des comptes de service (quand c’est possible)\nJamais de secrets en clair dans le code\n\nEn pratique, deux recommendations selon l’usage\n\nDemander interactivement le secret à l’utilisateur\nSpécifier des variables d’environnement via le fichier .Renviron (⚠️ à ajouter au .gitignore)"
  },
  {
    "objectID": "slides/complete.html#ressources-supplémentaires-1",
    "href": "slides/complete.html#ressources-supplémentaires-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Ressources supplémentaires",
    "text": "Ressources supplémentaires\n\n\nUne présentation de Maëlle Salmon sur le « code beau ».\nUne présentation très complète sur le partage de code et de données avec R\nUne documentation (en anglais) sur la gestion des secrets (tokens, mots de passe, etc.)"
  },
  {
    "objectID": "slides/complete.html#application-1-1",
    "href": "slides/complete.html#application-1-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 1",
    "text": "Application 1\n\n\n\nPartie 1 : vérification du bon fonctionnement du code\n\n\nUn code reproductible est avant toute chose un code fonctionnel !\n\nRepérez les erreurs qui empêchent le script script.R de s’exécuter correctement, et les corriger.\nRedémarrer votre session avec Session &gt; New Session (ou Ctrl+Maj+F10)\n\n\n\n\n\n\n\n\n\n\nLes pièges que cet exercice vous montre\n\n\n\n\nLes fonctions utilisées sans import des packages\nLes chemins et le working directory\nL’ordre des imports\nLes mauvaises pratiques de gestion de l’environnement (les bonnes pratiques arrivent dans les prochains exercices !)"
  },
  {
    "objectID": "slides/complete.html#application-1-2",
    "href": "slides/complete.html#application-1-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 1",
    "text": "Application 1\n\n\n\nPartie 2 : premiers standards de qualité\n\n\n\n\nInstaller les packages R lintr et styler1.\nDéfinir le linter à utiliser comme étant de type tidyverse avec lintr::use_lintr(type = \"tidyverse\")\nDiagnostiquer le script script.R avec lintr::lint(\"script.R\").\n\nComprenez-vous la nature des problèmes détectés par le linter?\n\nAppliquer le formatter au script.R avec styler::style_file(\"script.R\").\nRefaire tourner le linter. Il reste encore un certain nombre d’erreurs de formattage, car styler est un formatter peu intrusif.\nRegarder les problèmes restants repérés par le linter, et en corriger quelques uns (un pour chaque type de problème).\n\n\n\n\n\nLes install.packages sont à faire en console et ne doivent pas être mis dans le script (justification dans la prochaine partie de cet exercice)."
  },
  {
    "objectID": "slides/complete.html#application-1-3",
    "href": "slides/complete.html#application-1-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 1",
    "text": "Application 1\n\n\n\nPartie 3 : une meilleure gestion des packages utilisés\n\n\n\n\nLimiter les ambiguités sur les packages en utilisant la syntaxe package::fonction pour les packages rarement utilisés dans le script.\nL’installation des packages dans un script n’est pas une bonne pratique. Supprimer les instructions correspondantes.\nImporter le tidyverse au complet est rarement utile. N’importer à la place que les packages effectivement utilisés dans le script.\n\n\n\nA propos du rm(list = ls()) (le supprimer !)\n\nCette commande est une mauvaise pratique.\nOn la retrouve encore dans trop de scripts car elle est utilisée pour de mauvaises raisons. Elle ne remets pas à 0 votre environnement: elle supprime juste les données de celui-ci, sans toucher au reste (packages importés, etc.).\nIl vaut mieux gérer cela en changeant les options de  puis redémarrer la session  (CTRL+SHIFT+F10)"
  },
  {
    "objectID": "slides/complete.html#application-1-4",
    "href": "slides/complete.html#application-1-4",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 1",
    "text": "Application 1\n\n\n\nPartie 4 : (auto-)documentation du code\n\n\n\nL’objectif de cet exercice est de remettre de l’ordre dans le script, cela le rendra bien plus lisible.\n\nDéplacer les library pour les mettre tous ensemble au début du script.\nLe script n’est pas construit dans un ordre logique. Déplacer les parties pour adopter une structure plus lisible :\n\nGestion de l’environnement -&gt; Définition de fonctions -&gt; Import des données -&gt; Retraitement des données -&gt; Statistiques descriptives -&gt; Graphiques -&gt; Modélisation\n\nDonner des titres aux parties/sous-parties en utilisant les standards de documentation reconnus par RStudio :\n\n# TITRE NIVEAU 1 ------------ et ## TITRE NIVEAU 2 ==========\n\n\nAu passage, vous pouvez changer les noms de certains objets pour les rendre moins cryptiques (df3 n’est pas très clair)."
  },
  {
    "objectID": "slides/complete.html#application-1-5",
    "href": "slides/complete.html#application-1-5",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 1",
    "text": "Application 1\n\n\n\nPartie 5 : une meilleure gestion des secrets\n\n\n\nDans cette application, on va explorer deux manières possibles de gérer les secrets proprement.\nPremière possibilité : de manière interactive.\n\nRepérer le jeton d’API dans le code et le retirer, en le stockant temporairement ailleurs.\nUtiliser la fonction askForPassword du package rstudioapi, qui permet de demander à l’utilisateur d’entrer le secret à l’aide d’un pop-up interactif.\nVérifier le bon fonctionnement de la solution implémentée.\n\n⚠️ Cette solution nécessite l’exécution du code dans un environnement RStudio, ce qui implique un usage en self.\nDeuxième possibilité : via les variables d’environnement.\n\nSupprimer la solution précédente (pop-up interactif) et redémarrer le kernel R\nCréer un fichier .Renviron (voir cette fiche UtilitR pour plus d’info sur ce fichier) à la racine du projet et y ajouter une ligne JETON_API=xxx en remplaçant xxx par la valeur du jeton.\nImporter la valeur du jeton dans une variable api_token à l’aide de la fonction Sys.getenv.\nVérifier le bon fonctionnement de la solution implémentée.\nVérifier que l’exclusion du .Renviron est bien renseigné dans le .gitignore. Si ce n’est pas le cas, ajouter la règle et vérifier son bon fonctionnement, puis commit/push."
  },
  {
    "objectID": "slides/complete.html#checkpoint",
    "href": "slides/complete.html#checkpoint",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Checkpoint",
    "text": "Checkpoint\n\n\n\n\n\n\n\nCheckpoint\n\n\n\nLe script script.R\nLe .gitignore"
  },
  {
    "objectID": "slides/complete.html#bilan",
    "href": "slides/complete.html#bilan",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Bilan",
    "text": "Bilan\n\n\n\nUn code mal structuré\n\nLimite la lisibilité du projet\nEst très coûteux à maintenir (dette technique)\n\nLes petits gestes peuvent économiser un temps précieux"
  },
  {
    "objectID": "slides/complete.html#enjeux-1",
    "href": "slides/complete.html#enjeux-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Enjeux",
    "text": "Enjeux\n\nFavoriser la lisibilité et la maintenabilité\nConstruire des projets reproductibles"
  },
  {
    "objectID": "slides/complete.html#a-ne-pas-reproduire-chez-vous",
    "href": "slides/complete.html#a-ne-pas-reproduire-chez-vous",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "⚠️ A ne pas reproduire chez vous",
    "text": "⚠️ A ne pas reproduire chez vous\n\n├── report.Rmd\n├── correlation.png\n├── data.csv\n├── data2.csv\n├── fig1.png\n├── figure 2 (copy).png\n├── report.pdf\n├── partial data.csv\n├── script.R\n└── script_final.R\nSource : eliocamp.github.io"
  },
  {
    "objectID": "slides/complete.html#principes-généraux-1",
    "href": "slides/complete.html#principes-généraux-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Principes généraux",
    "text": "Principes généraux\n\nUtiliser les projets RStudio\nOrganiser son projet en sous-dossiers\nDonner des noms pertinents aux fichiers\nDocumenter son projet\n(Faire de son projet un package)"
  },
  {
    "objectID": "slides/complete.html#utiliser-les-projets-rstudio",
    "href": "slides/complete.html#utiliser-les-projets-rstudio",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Utiliser les projets RStudio",
    "text": "1️⃣ Utiliser les projets RStudio\n\nObjectif : favoriser la reproductibilité\n\nTous les fichiers nécessaires au projet dans un même dossier\nLe dossier contenant le projet RStudio est automatiquement utilisé comme working directory\nUtilisation de chemins relatifs plutôt qu’absolus.\n\nBonus : en utilisant Git, on s’assure de toujours travailler dans un projet RStudio !"
  },
  {
    "objectID": "slides/complete.html#organiser-son-projet-en-sous-dossiers",
    "href": "slides/complete.html#organiser-son-projet-en-sous-dossiers",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "2️⃣ Organiser son projet en sous-dossiers",
    "text": "2️⃣ Organiser son projet en sous-dossiers\n\n\nObjectif : adopter une structure arbitraire, mais lisible et cohérente\n\n├── data\n│   ├── raw\n│   │   ├── data.csv\n│   │   └── data2.csv\n│   └── derived\n│       └── partial data.csv\n├── R\n|   ├── script.R\n│   ├── script_final.R\n│   └── report.Rmd\n└── output\n    ├── fig1.png\n    ├── figure 2 (copy).png\n    ├── figure10.png\n    ├── correlation.png\n    └── report.pdf"
  },
  {
    "objectID": "slides/complete.html#donner-des-noms-pertinents-aux-fichiers",
    "href": "slides/complete.html#donner-des-noms-pertinents-aux-fichiers",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "3️⃣ Donner des noms pertinents aux fichiers",
    "text": "3️⃣ Donner des noms pertinents aux fichiers\n\n\nObjectif : auto-documenter son projet\n\n├── data\n│   ├── raw\n│   │   ├── dpe_logement_202103.csv\n│   │   └── dpe_logement_202003.csv\n│   └── derived\n│       └── dpe_logement_merged_preprocessed.csv\n├── R\n|   ├── preprocessing.R\n│   ├── generate_plots.R\n│   └── report.Rmd\n└── output\n    ├── histogram_energy_diagnostic.png\n    ├── barplot_consumption_pcs.png\n    ├── correlation_matrix.png\n    └── report.pdf"
  },
  {
    "objectID": "slides/complete.html#documenter-son-projet",
    "href": "slides/complete.html#documenter-son-projet",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "4️⃣ Documenter son projet",
    "text": "4️⃣ Documenter son projet\n\nLe fichier README.md, situé à la racine du projet, est à la fois la carte d’identité et la vitrine du projet\nIdéalement, il contient :\n\nUne présentation du contexte et des objectifs\nUne description de son fonctionnement\nUn guide de contribution (open-source)\n\nQuelques modèles de README.md complets :\n\nutilitR\nDoReMIFaSol"
  },
  {
    "objectID": "slides/complete.html#faire-de-son-projet-un-package",
    "href": "slides/complete.html#faire-de-son-projet-un-package",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "5️⃣ Faire de son projet un package",
    "text": "5️⃣ Faire de son projet un package\n\nUn package est la forme maximale de modularité\n\nContient des fonctions rangées dans des modules\nContient également de la documentation, des tests, des (méta-)données…\n\nAvantages\n\nIdéal pour favoriser la réutilisation du code\nDes outils de développement : devtools et usethis\n\nInconvénients\n\nCoût de maintenance élevé"
  },
  {
    "objectID": "slides/complete.html#ressources-supplémentaires-2",
    "href": "slides/complete.html#ressources-supplémentaires-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Ressources supplémentaires",
    "text": "Ressources supplémentaires\n\n\nLa documentation utilitR sur les projets RStudio et les packages R\nLa bible des packages R"
  },
  {
    "objectID": "slides/complete.html#application-2-1",
    "href": "slides/complete.html#application-2-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 2",
    "text": "Application 2\n\n\n\nPartie 1 : modularisation du projet\n\n\n\n\nDéplacer toutes les fonctions dans un fichier R/functions.R.\nDonner à la fonction fonction_de_stat_agregee un nom plus pertinent et des noms d’arguments plus transparents.\n\nDocumenter la fonction fonction_de_stat_agregee selon le standard roxygen. Vous pouvez vous aider d’une IA assistante comme ChatGPT, Claude ou Copilot, rien n’est sensible dans ce code (d’ailleurs rien de sensible ne doit être dans du code !).\nUtiliser les exemples d’utilisation de fonction_de_stat_agregee dans cette documentation.\n\nDans script.R, appeler en début de chaîne ces fonctions avec source(\"R/functions.R\", encoding = \"UTF-8\").\nTester le bon fonctionnement de script.R.\nSi votre chaîne écrit des outputs ou utilise des inputs (par exemple des données), restructurer l’aborescence du projet pour le rendre plus lisible et adaptez votre code en fonction.\nRenommer (voire déplacer) les scripts get_data.R et script.R pour rendre plus intelligible la chaîne de production.\nMettre à jour le .gitignore puis commit/push."
  },
  {
    "objectID": "slides/complete.html#application-2-2",
    "href": "slides/complete.html#application-2-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 2",
    "text": "Application 2\n\n\n\nPartie 2 : création d’un package (FACULTATIF)\n\n\n\n\nFermer le Rproj en cours (“Close Project” en haut à droite).\nInitialiser un package avec la fonction usethis::create_package() (par défaut dans le working directory)\nPlacer dans le dossier R du package un module stat.R et y copier la fonction de statistique agrégée\nRemplir le fichier DESCRIPTION. En particulier, spécifier les dépendances nécessaires (Imports) et facultatives (Suggests)\nConstruire la documentation du package avec la fonction devtools::document(). Où est-elle stockée et sous quel format ?\nCharger le package avec la fonction devtools::load_all() et vérifier que la fonction marche correctement\nVérifier que la documentation de notre fonction est accessible avec ?ma_fonction\n(Facultatif) Initialiser un nouveau projet sur GitHub est y mettre le code du package. Vérifier que le package peut être installé en local avec la fonction devtools::install_github()."
  },
  {
    "objectID": "slides/complete.html#checkpoint-2",
    "href": "slides/complete.html#checkpoint-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Checkpoint",
    "text": "Checkpoint\n\n\n\n\n\n\nCheckpoint\n\n\n\nLe script script.R\nLe script R/functions.R"
  },
  {
    "objectID": "slides/complete.html#enjeux-2",
    "href": "slides/complete.html#enjeux-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Enjeux",
    "text": "Enjeux\n\nLe choix d’un format de données répond à un arbitrage entre plusieurs critères :\n\nPublic cible\nFinalité (traitement, analyse, diffusion)\nVolumétrie\nInteropérabilité"
  },
  {
    "objectID": "slides/complete.html#formats-traditionnels",
    "href": "slides/complete.html#formats-traditionnels",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Formats traditionnels",
    "text": "Formats traditionnels\n\nFormats de données adhérents à un langage (sas7bdat, RDS, fst, etc.)\n\nNon-interopérables -&gt; à éviter !\n\nLe format CSV\n\nInteropérable et simple d’utilisation\nPas de gestion des méta-données\nPeu adapté aux données volumineuses"
  },
  {
    "objectID": "slides/complete.html#limites-du-csv",
    "href": "slides/complete.html#limites-du-csv",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Limites du CSV",
    "text": "Limites du CSV\n\nDes performances limitées\n\nStockage : non-compressé -&gt; espace disque élevé\nLecture : “orienté-ligne” -&gt; performances faibles"
  },
  {
    "objectID": "slides/complete.html#le-format-parquet",
    "href": "slides/complete.html#le-format-parquet",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Le format Parquet",
    "text": "Le format Parquet\n\nStockage :\n\nCompression : entre 5 et 20 fois plus léger qu’un CSV\n\n\n\n\n\n\n\n\n\n\nExemple: Recensement de la Population\n\n\n\nFicher détail : 20 millions de lignes, 92 variables\n\nCSV: &gt; 4Go\nParquet: &lt; 500Mo"
  },
  {
    "objectID": "slides/complete.html#le-format-parquet-1",
    "href": "slides/complete.html#le-format-parquet-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Le format Parquet",
    "text": "Le format Parquet\n\nLecture :\n\nJusqu’à 34x plus rapide qu’un CSV\n\n“Orienté colonne”\n\nOptimisé pour les traitements analytiques\nLimite la quantité de données à mettre en mémoire"
  },
  {
    "objectID": "slides/complete.html#le-format-parquet-2",
    "href": "slides/complete.html#le-format-parquet-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Le format Parquet",
    "text": "Le format Parquet\n\nPartitionner les données pour optimiser la lecture\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nL’art de bien partitionner\n\n\n\nPartitionner par une/des variable(s) d’intérêt\nEviter de créer de nombreux petits (&lt; 128Mo) fichiers"
  },
  {
    "objectID": "slides/complete.html#le-format-parquet-3",
    "href": "slides/complete.html#le-format-parquet-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Le format Parquet",
    "text": "Le format Parquet\n\nGestion native des méta-données\n\nDéfinition automatique d’un schéma (noms, types)\nMise à disposition plus robuste\n\nInteropérable\nOpen-source"
  },
  {
    "objectID": "slides/complete.html#le-format-parquet-4",
    "href": "slides/complete.html#le-format-parquet-4",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Le format Parquet",
    "text": "Le format Parquet\n\nDeux frameworks de référence : Arrow et DuckDB\n\nOrientation fichier (Arrow) VS orientation BDD (DuckDB)\nTrès bonne intégration avec le tidyverse\n\nTraitement en-mémoire optimisé\n\nOrientés-colonne\nLazy evaluation\n\n\n\n\n\n\n\n\n\n\nExemple d’une requête lazy\n\n\nn_logements_depcom &lt;- achille |&gt; \n  filter(dep %in% c(\"01\", \"02\", \"03\")) |&gt;  # Récupère seulement les données nécessaires\n  select(idlogement, depcom) |&gt;  # Récupère seulement les colonnes nécessaires\n  group_by(depcom) |&gt;\n  summarise(n_logements = n()) |&gt;  \n  collect()  # Les calculs ne sont effectués qu'à cette étape !"
  },
  {
    "objectID": "slides/complete.html#le-format-parquet-5",
    "href": "slides/complete.html#le-format-parquet-5",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Le format Parquet",
    "text": "Le format Parquet\n\nParquet gagne sur tous les tableaux"
  },
  {
    "objectID": "slides/complete.html#application-3-1",
    "href": "slides/complete.html#application-3-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 3",
    "text": "Application 3\n\n insee\n\n\n\n\n\n\nPartie 0 : préparation\n\n\n\nRemplacer le contenu du script get_data.R en copiant-collant le contenu de ce fichier. Exécuter ce script, il importe les fichiers nécessaires pour cette application.\n\n\n\n\n\n\n\n\n\n\n\nPartie 0 : préparation\n\n\n\nRemplacer le contenu du script get_data_ls3.R en copiant-collant le contenu de ce fichier. Exécuter ce script, il importe les fichiers nécessaires pour cette application."
  },
  {
    "objectID": "slides/complete.html#application-3-2",
    "href": "slides/complete.html#application-3-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 3",
    "text": "Application 3\n\n\n\n\nPartie 1 : Du CSV au Parquet\n\n\nTout au long de cette application, nous allons voir comment utiliser le format Parquet de manière la plus efficiente. Afin de comparer les différents formats et méthodes d’utilisation, nous allons comparer le temps d’exécution et l’usage mémoire d’une requête standard. Commençons par comparer les formats CSV et Parquet.\n\nRemplacer le contenu du script get_data.R en copiant-collant le contenu de ce fichier. Exécuter ce script, il importe les fichiers nécessaires dans cette application\nPour effectuer les comparaisons de performance, on va utiliser la fonction bench::mark. Analyser la documentation pour comprendre ce que la fonction attend en entrée.\nLa requête suivante permet de calculer les données pour construire une pyramide des âges sur un département donné, à partir du fichier CSV du recensement. Encapsuler la requête dans une fonction req_csv (sans argument).\n\nres &lt;- readr::read_csv(\"data/RPindividus_24.csv\") %&gt;% \n    filter(DEPT == \"36\") %&gt;%\n    group_by(AGED, DEPT) %&gt;%\n    summarise(n_indiv = sum(IPONDI))\n\nSur le même modèle, construire une fonction req_read_parquet basée cette fois sur le fichier data/RPindividus_24.parquet chargé avec la fonction read_parquet d’Arrow\nComparer les performances (temps d’exécution et allocation mémoire) de ces deux méthodes grâce à la fonction bench::mark, à laquelle on passera les paramètres iterations = 1 (comparaison à partir d’une seule itération) et check = FALSE (autorise les outputs des deux fonctions à être différents).\n\n\n\n\n\n❓️ Quelle semble être la limite de la fonction read_parquet ?"
  },
  {
    "objectID": "slides/complete.html#application-3-3",
    "href": "slides/complete.html#application-3-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 3",
    "text": "Application 3\n\n\n\n\nPartie 2 : Exploiter la lazy evaluation et les optimisations d’Arrow\n\n\nLa partie précédente a montré un gain de temps considérable du passage de CSV à Parquet. Néanmoins, l’utilisation mémoire était encore très élevée alors qu’on utilise de fait qu’une infime partie du fichier. Dans cette partie, on va voir comment utiliser la lazy evaluation et les optimisations du plan d’exécution effectuées par Arrow pour exploiter pleinement la puissance du format Parquet.\n\nUtiliser la fonction arrow::open_dataset pour ouvrir le fichier data/RPindividus_24.parquet. Regarder la classe de l’objet obtenu.\nAfficher les 5 premières lignes de la table avec la fonction head(). Observer l’objet obtenu (sortie en console, classe).\nAjouter une étape collect() à la fin de cette chaîne. Comprenez-vous la différence ?\nConstruire une fonction req_open_dataset sur le modèle de celles de la partie précédente, qui importe cette fois les données avec la fonction arrow::open_dataset\nComparer les performances (temps d’exécution et allocation mémoire) des trois méthodes (CSV, read_parquet et open_dataset) grâce à la fonction bench::mark\n\n\n\n\n\n❓️ Quelle méthode retenir pour lire un Parquet avec Arrow ?"
  },
  {
    "objectID": "slides/complete.html#application-3-4",
    "href": "slides/complete.html#application-3-4",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 3",
    "text": "Application 3\n\n\n\n\nPartie 3 : Le Parquet partitionné\n\n\nLa lazy evaluation et les optimisations d’Arrow apportent des gain de performance considérables. Mais on peut encore faire mieux ! Lorsqu’on sait qu’on va être amené à filter régulièrement les données selon une variable d’intérêt, on a tout intérêt à partitionner le fichier Parquet selon cette variable.\n\nParcourir la documentation de la fonction arrow::write_dataset pour comprendre comment spécifier la clé de partitionnement d’un fichier Parquet. Plusieurs méthodes sont possibles !\nDans une même chaîne, importer la table individus complète du recensement data/RPindividus.parquet avec la fonction arrow::open_dataset et l’exporter en une table data/RPindividus_dept.parquet partitionnée par le département (DEPT)\nObserver l’arborescence de fichiers de la table exportée\nModifier la fonction req_open_dataset de la partie précédente pour partir de la table complète (non-partitionnée) data/RPindividus.parquet au lieu de l’échantillon\nConstruire une fonction req_open_dataset_part sur le modèle de req_open_dataset, qui importe cette fois les données partitionnées data/RPindividus_dept.parquet. Ne pas oublier de spécifier le paramètre hive_style = TRUE.\nComparer les performances (temps d’exécution et allocation mémoire) des deux méthodes grâce à la fonction bench::mark\n\n\n\n\n\n\n❓️ Dans le cadre d’une mise à disposition de données en Parquet auprès d’utilisateurs :\n\nComment bien choisir la/les clé(s) de partitionnement ?\nQuelle est la limite à garder en tête ?"
  },
  {
    "objectID": "slides/complete.html#application-3-5",
    "href": "slides/complete.html#application-3-5",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 3",
    "text": "Application 3\n\n\n\n\nPartie 4 : mise à jour de la chaîne de production\n\n\nConvaincus par ce comparatif, nous allons maintenant mettre à jour le format des données utilisées pour notre chaîne de production.\n\nModifier le script script.R pour importer les données d’entrée de votre chaîne à partir de la table Parquet partitionnée par département\nVérifier que le code tourne de A à Z et l’adapter si ce n’est pas le cas\n\n\n\n\n\n❓️ Cette mise à jour des données utilisées en source de la chaîne de production vous semble-t-elle complexe ? Pourquoi ?"
  },
  {
    "objectID": "slides/complete.html#checkpoint-4",
    "href": "slides/complete.html#checkpoint-4",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Checkpoint",
    "text": "Checkpoint\n\n\n\n\n\n\n\nCheckpoint\n\n\n\nLe script script.R"
  },
  {
    "objectID": "slides/complete.html#enjeux-3",
    "href": "slides/complete.html#enjeux-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Enjeux",
    "text": "Enjeux\n\nImaginons la situation suivante :\n\nJ’installe une version de R sur mon poste\nJe développe un projet en installant les packages nécessaires\nUne fois terminé, je passe au projet suivant, et ainsi de suite.\n\nQuels problèmes puis-je rencontrer au fil des projets ?\nEst-il facile de partager un de mes projets ?"
  },
  {
    "objectID": "slides/complete.html#enjeux-4",
    "href": "slides/complete.html#enjeux-4",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Enjeux",
    "text": "Enjeux\n\nVersion de R fixe, celle de l’installation système\nConflits de version : différents projets peuvent requérir différentes versions d’un même package.\nReproductibilité limitée : difficile de dire quel projet nécessite quel package.\nPortabilité limitée : difficile de préciser dans un fichier les dépendances spécifiques à un projet."
  },
  {
    "objectID": "slides/complete.html#des-environnements-reproductibles-avec-renv",
    "href": "slides/complete.html#des-environnements-reproductibles-avec-renv",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Des environnements reproductibles avec renv",
    "text": "Des environnements reproductibles avec renv\n\nrenv permet de créer des environnements reproductibles\nIsolation : chaque projet dispose de sa propre librairie de packages\nReproductibilité : renv enregistre les versions exactes des packages nécessaires au projet\nPortabilité: un tiers peut exécuter le projet avec les mêmes spécifications"
  },
  {
    "objectID": "slides/complete.html#utilisation-de-renv",
    "href": "slides/complete.html#utilisation-de-renv",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Utilisation de renv",
    "text": "Utilisation de renv\n\nInitialisation (init) de l’environnement local du projet\nDéveloppement du projet\nEnregistrement (snapshot) des versions des packages installés\nRestauration (restore) d’un environnement"
  },
  {
    "objectID": "slides/complete.html#initialisation-de-lenvironnement",
    "href": "slides/complete.html#initialisation-de-lenvironnement",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Initialisation de l’environnement",
    "text": "1️⃣ Initialisation de l’environnement\n\nrenv::init() dans un projet RStudio crée :\n\nUn dossier renv et le fichier .Rprofile : activation automatique de l’environnement\nLe fichier renv.lock : versions des packages installés"
  },
  {
    "objectID": "slides/complete.html#développement-du-projet",
    "href": "slides/complete.html#développement-du-projet",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "2️⃣ Développement du projet",
    "text": "2️⃣ Développement du projet\n\nUne fois l’environnement initialisé, on développe le projet de manière habituelle :\n\nInstallations/suppressions/mises à jour de packages\nEcriture de scripts\n\nrenv::status() : indique les packages installés/supprimés par rapport au fichier renv.lock"
  },
  {
    "objectID": "slides/complete.html#enregistrement-de-lenvironnement",
    "href": "slides/complete.html#enregistrement-de-lenvironnement",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "3️⃣ Enregistrement de l’environnement",
    "text": "3️⃣ Enregistrement de l’environnement\n\nrenv::snapshot() : enregistre les versions des packages installés dans le fichier renv.lock\nNe pas oublier de committer le fichier renv.lock!"
  },
  {
    "objectID": "slides/complete.html#restauration-de-lenvironnement",
    "href": "slides/complete.html#restauration-de-lenvironnement",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "4️⃣ Restauration de l’environnement",
    "text": "4️⃣ Restauration de l’environnement\n\nrenv::restore() : installe/désinstalle les packages nécessaires pour arriver à l’état spécifié dans le fichier renv.lock\nPortabilité : un tiers peut recréer un environnement avec les mêmes spécifications"
  },
  {
    "objectID": "slides/complete.html#application-4-2",
    "href": "slides/complete.html#application-4-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 4",
    "text": "Application 4\n\n insee\n\n\n\n\n\n\nPartie 1 : prise en main de la librairie renv\n\n\n\nInstaller le package renv\nTaper dans la console renv::init(), lire le message et accepter.\nObserver les nouveaux fichiers et dossiers qui sont apparus dans le projet.\nTaper library(sf) dans la console R et observer la réponse de R. Comprenez-vous pourquoi ?\nDans la partie sur les statistiques descriptives, ajouter ce code qui produit une carte\n\nS’il manque un package pour la faire, l’installer\n\n\n\n\nNouvelle statistique descriptive à ajouter\n\n# PART DES SENIORS DANS LA POPULATION ---------------------------\n\n# France geojson\ndepartements &lt;- sf::st_read(\n  \"https://minio.lab.sspcloud.fr/projet-formation/bonnes-pratiques/data/france.geojson\"\n)\n\n# PART DES SENIORS FRANCE ENTIERE =====================================\n\npart_seniors &lt;- open_dataset(\n  \"./data/RPindividus\",\n  hive_style = TRUE\n) %&gt;%\n  mutate(plus_60 = AGED &gt; 60) %&gt;%\n  group_by(DEPT, plus_60) %&gt;%\n  summarise(\n    population_totale = sum(IPONDI)\n  ) %&gt;%\n  group_by(DEPT) %&gt;%\n  mutate(\n    population_60_ans = population_totale,\n    pourcentage_60_plus = population_totale/sum(population_totale),\n    population_totale = sum(population_totale)\n  ) %&gt;%\n  filter(plus_60 == TRUE) %&gt;%\n  select(DEPT, population_totale, population_60_ans, pourcentage_60_plus) %&gt;%\n  collect()\n\n\n# CARTE =====================================\n\ndepartements_60_plus_sf &lt;- departements %&gt;%\n  inner_join(\n    part_seniors,\n    by = c(\"INSEE_DEP\" = \"DEPT\")\n  )\n\n\nggplot(departements_60_plus_sf) +\n  geom_sf(aes(fill = pourcentage_60_plus)) + \n  scale_fill_fermenter(n.breaks = 5, palette = \"PuBuGn\", direction = 1) + \n  theme_void() + \n  labs(\n    title = \"Part des personnes de plus de 60 ans par département\",\n    caption = \"Source: Insee, Fichiers détails du recensement de la population\",\n    fill = \"Part (%)\"\n  )\n\n\n\n\n\n\n\n\n\n\n\nPartie 1 : prise en main de la librairie renv\n\n\n\nInstaller le package renv\nTaper dans la console renv::init(), lire le message et accepter.\nObserver les nouveaux fichiers et dossiers qui sont apparus dans le projet.\nTaper library(sf) dans la console R et observer la réponse de R. Comprenez-vous pourquoi ?\nDans la partie sur les statistiques descriptives, ajouter ce code qui produit une carte\n\nS’il manque un package pour la faire, l’installer\n\n\n\n\nNouvelle statistique descriptive à ajouter\n\n# PART DES SENIORS DANS LA POPULATION ---------------------------\n\n# France geojson\ndepartements &lt;- aws.s3::s3read_using(\n  FUN = sf::st_read, \n  object = \"france.geojson\", \n  bucket = \"public/ssplab-formation\",\n  opts = list(\"region\" = \"\")\n  )\n\n# PART DES SENIORS FRANCE ENTIERE =====================================\n\npart_seniors &lt;- open_dataset(\n  \"./data/RPindividus\",\n  hive_style = TRUE\n) %&gt;%\n  mutate(plus_60 = AGED &gt; 60) %&gt;%\n  group_by(DEPT, plus_60) %&gt;%\n  summarise(\n    population_totale = sum(IPONDI)\n  ) %&gt;%\n  group_by(DEPT) %&gt;%\n  mutate(\n    population_60_ans = population_totale,\n    pourcentage_60_plus = population_totale/sum(population_totale),\n    population_totale = sum(population_totale)\n  ) %&gt;%\n  filter(plus_60 == TRUE) %&gt;%\n  select(DEPT, population_totale, population_60_ans, pourcentage_60_plus) %&gt;%\n  collect()\n\n\n# CARTE =====================================\n\ndepartements_60_plus_sf &lt;- departements %&gt;%\n  inner_join(\n    part_seniors,\n    by = c(\"INSEE_DEP\" = \"DEPT\")\n  )\n\n\nggplot(departements_60_plus_sf) +\n  geom_sf(aes(fill = pourcentage_60_plus)) + \n  scale_fill_fermenter(n.breaks = 5, palette = \"PuBuGn\", direction = 1) + \n  theme_void() + \n  labs(\n    title = \"Part des personnes de plus de 60 ans par département\",\n    caption = \"Source: Insee, Fichiers détails du recensement de la population\",\n    fill = \"Part (%)\"\n  )"
  },
  {
    "objectID": "slides/complete.html#application-4-3",
    "href": "slides/complete.html#application-4-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 4",
    "text": "Application 4\n\n\n\nPartie 2 : Faire un snapshot de l’environnement\n\n\n\n\nDans la console, faire renv::status() et observer le message\nEffectuer renv::snapshot() pour intégrer les nouveaux packages au lockfile\nFaire un commit / push des fichiers script.R, .Rprofile, renv.lock et du dossier renv/"
  },
  {
    "objectID": "slides/complete.html#application-4-4",
    "href": "slides/complete.html#application-4-4",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 4",
    "text": "Application 4\n\n\n\nPartie 3 : Test de portabilité\n\n\n\n\nOuvrir un nouveau projet RStudio et cloner à nouveau votre dépôt (sous un nom différent)\nExécuter renv::restore() pour installer les packages nécessaires à l’exécution du projet\nVérifier que le script.R s’exécute correctement dans ce nouveau projet"
  },
  {
    "objectID": "slides/complete.html#checkpoint-6",
    "href": "slides/complete.html#checkpoint-6",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Checkpoint",
    "text": "Checkpoint\n\n insee\n\n\n\n\n\n\n\n\n\nCheckpoint\n\n\n\nLe script main.R\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheckpoint\n\n\n\nLe script main.R"
  },
  {
    "objectID": "slides/complete.html#vers-une-reproductibilité-optimale",
    "href": "slides/complete.html#vers-une-reproductibilité-optimale",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Vers une reproductibilité optimale",
    "text": "Vers une reproductibilité optimale\n\nLimites des environnements virtuels :\n\nLes librairies système ne sont pas gérées\nLourdeur de la phase d’installation à chaque changement d’environnement\nPeu adaptés à un environnement de production\n\nLa conteneurisation (ex : Docker) apporte la solution\nIntuition : au lieu de distribuer la recette pour recréer l’environnement, distribuer directement une “machine” qui contient tout l’environnement nécessaire au projet"
  },
  {
    "objectID": "slides/complete.html#ressources-supplémentaires-3",
    "href": "slides/complete.html#ressources-supplémentaires-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Ressources supplémentaires",
    "text": "Ressources supplémentaires\n\nLa documentation officielle de renv\nLa fiche utilitR sur la gestion des dépendances"
  },
  {
    "objectID": "slides/complete.html#de-quoi-parle-t-on",
    "href": "slides/complete.html#de-quoi-parle-t-on",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "De quoi parle-t-on ?",
    "text": "De quoi parle-t-on ?\n\nProduction statistique : chiffres, données, analyses produits par l’Insee / les SSM\nProduction informatique : processus maintenus par la DSI sur des infrastructures avec “garantie de service”\nSelf de production : processus maintenus par le métier sur une infrastructure “self”\nCode de production : code respectant des standards de qualité qui le rendent efficace et maintenable"
  },
  {
    "objectID": "slides/complete.html#r-un-langage-de-production",
    "href": "slides/complete.html#r-un-langage-de-production",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "R : un langage de production ?",
    "text": "R : un langage de production ?\n\nR a émergé dans la communauté statistique\n\nOutils d’analyse interactive très développés\nOutils de développement limités\n\nL’éco-système tidyverse s’oriente vers des outils production-ready"
  },
  {
    "objectID": "slides/complete.html#les-trois-commandements-dhadley",
    "href": "slides/complete.html#les-trois-commandements-dhadley",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Les trois commandements d’Hadley",
    "text": "Les trois commandements d’Hadley\n\nLe code de production a trois caractéristiques\n\n“Not just me”\n“Not just once”\n“Not just my computer”"
  },
  {
    "objectID": "slides/complete.html#les-trois-commandements-dhadley-1",
    "href": "slides/complete.html#les-trois-commandements-dhadley-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Les trois commandements d’Hadley",
    "text": "Les trois commandements d’Hadley\n\n\nLe code de production a trois caractéristiques\n\n“Not just me”\n“Not just once”\n“Not just my computer”"
  },
  {
    "objectID": "slides/complete.html#not-just-me",
    "href": "slides/complete.html#not-just-me",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "“Not just me”",
    "text": "“Not just me”\n\nPenser son projet en termes de maintenabilité\nAdopter les standards communautaires\n\nGit pour la traçabilité des choix\nQualité du code (structure, documentation)\nChoix des packages (voir fiche UtilitR)\n\n\n\n\n\n“Le simple fait qu’un package fasse (ou semble faire) ce que vous voulez n’est pas une raison suffisante de l’utiliser, surtout si votre programme doit rester fonctionnel pendant une longue période. Déterminer si on peut utiliser un package revient à faire un arbitrage entre avantages et inconvénients, et à évaluer le risque d’instabilité d’un package.”\nUtilitR"
  },
  {
    "objectID": "slides/complete.html#not-just-me-1",
    "href": "slides/complete.html#not-just-me-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "“Not just me”",
    "text": "“Not just me”\n\nOrganiser le travail collaboratif\n\nS’accorder sur une organisation\nDes outils facilitant via l’écosystème Git\n\nTraiter le code comme un élément méthodologique\n\nRevue de code\n\n\n\n\n\n“Les développeurs, quel que soit leur rôle, y voient de multiples avantages et un contexte dans lequel ils peuvent se former mutuellement, maintenir l’intégrité des bases de code de leurs équipes et créer, établir et faire évoluer des normes qui garantissent la lisibilité et la cohérence du code.”\nSadowski et al., Modern code review: a case study at google (2018)"
  },
  {
    "objectID": "slides/complete.html#not-just-me-2",
    "href": "slides/complete.html#not-just-me-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "“Not just me”",
    "text": "“Not just me”\n\nPenser à l’expérience des utilisateurs finaux\nPour la mise à disposition de données : Parquet\n\nInteropérable et méta-données incluses\nPerformances en stockage et en lecture\n\nPour la documentation / publication : quarto\n\nIntègre code et texte pour la reproductibilité\nPublication multi-formats (pdf, odt, html)\n\nExemple “2 en 1” : utiliser les données RP en Parquet"
  },
  {
    "objectID": "slides/complete.html#les-trois-commandements-dhadley-2",
    "href": "slides/complete.html#les-trois-commandements-dhadley-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Les trois commandements d’Hadley",
    "text": "Les trois commandements d’Hadley\n\n\nLe code de production a trois caractéristiques\n\n“Not just me”\n“Not just once”\n“Not just my computer”"
  },
  {
    "objectID": "slides/complete.html#not-just-once",
    "href": "slides/complete.html#not-just-once",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "“Not just once”",
    "text": "“Not just once”\n\nPenser son projet en termes de reproductibilité\nUne tâche de production\n\nEst répétée dans le temps\nPeut changer d’environnement (dev, test, prod…)\n\nProblème : le monde “autour du code” évolue\n\nSpécifier et contrôler l’environnement\nAutomatiser ce qui peut l’être"
  },
  {
    "objectID": "slides/complete.html#not-just-once-1",
    "href": "slides/complete.html#not-just-once-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "“Not just once”",
    "text": "“Not just once”\n\nLes données changent\n\nFactoriser le code avec des fonctions\nModéliser sa chaîne sous forme de DAG\n\n\n\n\n\n\n\n\n\nOutil : {targets}"
  },
  {
    "objectID": "slides/complete.html#not-just-once-2",
    "href": "slides/complete.html#not-just-once-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "“Not just once”",
    "text": "“Not just once”\n\nLe code / les données changent… et cassent\nSpécifier les attendus\n\nTests unitaires : vérifie le bon comportement du code\nValidation de données : vérifie l’intégrité et la qualité des données\n\nOutils : testthat et pointblank"
  },
  {
    "objectID": "slides/complete.html#not-just-once-3",
    "href": "slides/complete.html#not-just-once-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "“Not just once”",
    "text": "“Not just once”\n\nLes dépendances changent (fonctionnalités, bugs, failles de sécurité…)\nArbitrage entre évolutivité et stabilité\n\nL’évolution des dépendances est inhérente à la maintenance d’une chaîne de production\n\nOn limite les risques en spécifiant l’environnement\n\nFixer les versions des packages utilisés : renv\nVersionner sa chaîne de production : tags Git"
  },
  {
    "objectID": "slides/complete.html#not-just-once-4",
    "href": "slides/complete.html#not-just-once-4",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "“Not just once”",
    "text": "“Not just once”\n\nL’environnement change (OS, libs système, R…)\n\nDifficulté principale du passage en production\n\nLa conteneurisation permet de fixer l’environnement\n\nFavorise la portabilité"
  },
  {
    "objectID": "slides/complete.html#not-just-once-5",
    "href": "slides/complete.html#not-just-once-5",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "“Not just once”",
    "text": "“Not just once”\n\nConcevoir sa chaîne comme un pipeline de données\n\nReproductibilité : étapes intégrées “de bout en bout”\nStabilité : contrôle des évolutions\nPortabilité : fluidifie le changement d’architecture\n\nAvantage supplémentaire : automatisation\nOutil : intégration continue via GitHub / GitLab\n\nAccroît encore les bénéfices d’utiliser Git !"
  },
  {
    "objectID": "slides/complete.html#les-trois-commandements-dhadley-3",
    "href": "slides/complete.html#les-trois-commandements-dhadley-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Les trois commandements d’Hadley",
    "text": "Les trois commandements d’Hadley\n\n\nLe code de production a trois caractéristiques\n\n“Not just me”\n“Not just once”\n“Not just my computer”"
  },
  {
    "objectID": "slides/complete.html#not-just-my-computer",
    "href": "slides/complete.html#not-just-my-computer",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "“Not just my computer”",
    "text": "“Not just my computer”\n\nEvolution continue vers des infrastructures de self “production-ready”"
  },
  {
    "objectID": "slides/complete.html#not-just-my-computer-1",
    "href": "slides/complete.html#not-just-my-computer-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "“Not just my computer”",
    "text": "“Not just my computer”\n\nOK, mais pourquoi 🤔 ?\nPourquoi migrer vers des infrastructures centralisées ?\n\nCentralisation : permet le passage à l’échelle\nSécurité : évite la dissémination de données\n\nPourquoi migrer vers des infrastructures Kubernetes ?\n\nTout ce qu’on pouvait faire avant… en mieux\nNouveaux usages : déploiements (applications, API), calcul distribué, traitements ordonnancés…\nAutonomie (environnement, stockage, etc.)"
  },
  {
    "objectID": "slides/complete.html#not-just-my-computer-2",
    "href": "slides/complete.html#not-just-my-computer-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "“Not just my computer”",
    "text": "“Not just my computer”\nUn point de départ commun"
  },
  {
    "objectID": "slides/complete.html#not-just-my-computer-3",
    "href": "slides/complete.html#not-just-my-computer-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "“Not just my computer”",
    "text": "“Not just my computer”\nUn point de départ commun \nUne structuration de projet plus viable"
  },
  {
    "objectID": "slides/complete.html#not-just-my-computer-4",
    "href": "slides/complete.html#not-just-my-computer-4",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "“Not just my computer”",
    "text": "“Not just my computer”\nUn point de départ commun \nUne structuration de projet plus viable \nFacilitée par l’éco-système cloud"
  },
  {
    "objectID": "slides/complete.html#not-just-my-computer-5",
    "href": "slides/complete.html#not-just-my-computer-5",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "“Not just my computer”",
    "text": "“Not just my computer”\n\nQu’est-ce qui change 🤔 ?\nTechniquement, tout… ou presque !\n\nDu monde desktop au monde server\nDu monde Windows au monde Linux\n\nEn pratique, Onyxia facilite la transition"
  },
  {
    "objectID": "slides/complete.html#not-just-my-computer-6",
    "href": "slides/complete.html#not-just-my-computer-6",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "“Not just my computer”",
    "text": "“Not just my computer”\n\nQu’est-ce qui change 🤔 ?\nMonde conteneurisé : les traitements sont éphémères\n\n“Coût” de l’autonomie et de la mutualisation\nMais source de reproductibilité !"
  },
  {
    "objectID": "slides/complete.html#not-just-my-computer-7",
    "href": "slides/complete.html#not-just-my-computer-7",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "“Not just my computer”",
    "text": "“Not just my computer”\n\nQu’est-ce qui change 🤔 ?\n\nEvolution du mode de stockage de données\n\nInfrastructures “bureau virtuel” : lecteurs partagés\n\nLe “bureau virtuel” simule le filesystem traditionnel\n\nInfrastructures cloud : stockage objet (S3 / MinIO)\n\nStockage très peu coûteux\nAutonomie : bucket personnel / de projet\nFonctionnement différent des filesystems"
  },
  {
    "objectID": "slides/complete.html#not-just-my-computer-8",
    "href": "slides/complete.html#not-just-my-computer-8",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "“Not just my computer”",
    "text": "“Not just my computer”\n\nQu’est-ce qui change 🤔 ?\nEvolution de la nature des traitements\n\nTraitements interactifs pour le développement\nTraitements batch pour le déploiement\n\nLe débogage devient moins immédiat\n\nNécessité du logging : logger"
  },
  {
    "objectID": "slides/complete.html#dépasser-le-mur-de-la-production",
    "href": "slides/complete.html#dépasser-le-mur-de-la-production",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Dépasser le “mur de la production”",
    "text": "Dépasser le “mur de la production”\n\nUne organisation limitée par l’hétérogénéité des environnements"
  },
  {
    "objectID": "slides/complete.html#dépasser-le-mur-de-la-production-1",
    "href": "slides/complete.html#dépasser-le-mur-de-la-production-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Dépasser le “mur de la production”",
    "text": "Dépasser le “mur de la production”\n\nL’opportunité d’organisations plus continues"
  },
  {
    "objectID": "slides/complete.html#application-5-partie-1",
    "href": "slides/complete.html#application-5-partie-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 5: partie 1",
    "text": "Application 5: partie 1\n\n\n\n\nPartie 1 : transition vers le stockage S3\n\n\n\n\nEn début de script, créer les chemins où les données pourront être trouvées (voir ci-dessous)\nCréer un connecteur Arrow entre votre session R et l’espace de stockage S3\n\nbucket &lt;- s3_bucket(bucket_formation, endpoint_override = Sys.getenv(\"AWS_S3_ENDPOINT\"))\nbucket_path &lt;- bucket$path(paste0(path_within_bucket, \"/RPindividus\"))\n\nDans main.R, modifier les codes utilisant open_dataset pour remplacer les chemins par la variable bucket_path.\n\ndf &lt;- open_dataset(\n  bucket_path,\n  hive_style = TRUE\n) %&gt;%\n  filter(REGION == 24) %&gt;%\n  select(any_of(columns_subset)) %&gt;%\n  collect()\n\nSi nécessaire, remplacer l’import du geojson\n\ndepartements &lt;- aws.s3::s3read_using(\n  FUN = sf::st_read, \n  object = \"france.geojson\", \n  bucket = paste0(bucket_formation, \"/\", path_within_bucket),\n  opts = list(\"region\" = \"\")\n  )\n\n\n\nConnecteur pour la question 1\n\n\n insee\n\n\nbucket_formation &lt;- \"projet-formation\"\npath_within_bucket &lt;- \"/bonnes-pratiques/data\"\n\n\nbucket_formation &lt;- \"public\"\npath_within_bucket &lt;- \"/ssplab-formation\""
  },
  {
    "objectID": "slides/complete.html#application-5-partie-2",
    "href": "slides/complete.html#application-5-partie-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 5: partie 2",
    "text": "Application 5: partie 2\n\n\n\nPartie 2 : orchestrer sa chaîne de production\n\n\nAu fil des chapitres précédents, nous avons appliqué un ensemble de bonnes pratiques à notre chaîne de production pour accroître sa qualité et sa maintenabilité. Néanmoins, celle-ci est encore sous la forme d’un unique script.\nDe manière générale, on a plutôt envie de modéliser les étapes d’une chaîne comme une série de fonctions, avec une fonction “cheffe d’orchestre” qui appelle les autres dans le bon ordre.\n\n\nCréer les scripts suivants:\n\n\nR/functions_import.R (contenu)\nR/functions_stats_desc.R (contenu)\nR/functions_models.R (contenu)\n\n\nModifier main.R pour tenir compte de la modularisation (version  + sspcloud ou version  + LS3)\nPasser la souris sur une des nouvelles fonctions et faire F1\n\n\n\n\n\n\n\n\n\n\n\ntargets: un orchestrateur formel\n\n\nOn aurait pu également utiliser un orchestrateur dédié pour effectuer cette tâche, comme le package targets. Les plus curieux d’entre vous pourront aller voir le chapitre et les exercices qui lui étaient auparavant dédiés dans cette formation."
  },
  {
    "objectID": "slides/complete.html#application-5-partie-3",
    "href": "slides/complete.html#application-5-partie-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 5: partie 3",
    "text": "Application 5: partie 3\n\n\n\n\nPartie 3 : ajout de contrôles de qualité des données\n\n\nUn critère de qualité majeur d’une chaîne de production est sa robustesse. Naturellement, les données en entrée de la chaîne peuvent évoluer dans le temps. Afin de gérer au mieux les risques posés par de telles évolutions, on va ajouter des contrôles sur la qualité des données, en entrée et en sortie de la chaîne.\n\n\n\n\n\n\n\n\nPartie 4 : tests unitaires et versionnage de la chaîne\n\n\nNotre chaîne tourne à présent de manière robuste. Pour autant, ce n’est pas un objet fixe : on peut vouloir lui apporter des corrections ou des améliorations fonctionnelles. Et ces modifications peuvent, à leur tour, provoquer des nouvelles erreurs. Pour gérer ces risques, on va : - versionner la chaîne, afin de certifier le code qui la fait tourner sans erreur à un moment T - implémenter des tests unitaires, qui permettent de continuer à modifier la chaîne sans risquer de régressions\n\n\n\n\n\n\n\n\nPartie 5 : un rapport reproductible pour documenter sa chaîne de production\n\n\nUne bonne manière de favoriser à la fois la maintenabilité de sa chaîne et la réutilisationde ses produits est de documenter son fonctionnement. Le format quarto — successeur de R Markdown — permet de reproduire facilement des rapports reproductibles, qui intègrent code et texte. En plus, ces rapports peuvent être facilement publiés en différents formats, du plus interactif (html) aux plus classiques (pdf, odt, etc.).\n\n\n\n\n\n\n\n\nPartie 6 : automatiser la mise à disposition\n\n\nOn dispose finalement d’une chaîne orchestrée, robuste et bien documentée. Afin d’en faire une chaîne vraiment intégrée de bout en bout, on va automatiser les étapes, de sorte à ce que les modifications apportées au projet se répércutent sur ses sorties. Pour cela, on va utiliser les outils de l’intégration continue proposés par GitHub / GitLab."
  },
  {
    "objectID": "slides/complete.html#ressources-supplémentaires-4",
    "href": "slides/complete.html#ressources-supplémentaires-4",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Ressources supplémentaires",
    "text": "Ressources supplémentaires\n\nLa documentation utilitR\nCours Reproductibilité et bonnes pratiques pour les projets de data science de l’ENSAE\nUn cours complet (en anglais) sur la reproductibilité avec R\nConférence “R in production” d’Hadley Wickham (en anglais)\nLe cours (en construction) “R in production” d’Hadley Wickham (en anglais)"
  },
  {
    "objectID": "slides/complete.html#conclusion-1",
    "href": "slides/complete.html#conclusion-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Conclusion",
    "text": "Conclusion\n\nDes standards communautaires qui favorisent la reproductibilité et la maintenabilité\nDe multiples outils pour simplifier leur mise en oeuvre\nUn coût d’autant plus faible que l’on se place en amont\nLe mouvement de modernisation du self est l’occasion d’une montée en compétence collective"
  },
  {
    "objectID": "slides/complete.html#ressources-communautaires",
    "href": "slides/complete.html#ressources-communautaires",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Ressources communautaires",
    "text": "Ressources communautaires\n\nCanaux de discussion\n\nA l’Insee\n\nPour toute question sur Git : Insee-Git-Gitlab\nPour toute question stat/self : Insee - Outils Stats v2\nPour toute question spécifique à AUS/LS3 : Insee-DSI-Plateformes-Internes-Datascience\n\nPlus largement sur R\n\nSur Tchap : Langage R (Tchap)\nSur Slack : r-grrr\n\n\nDocumentation\n\nService datascience Insee\nUtilitR\n\nFormation\n\nEspace formation du SSP Cloud"
  },
  {
    "objectID": "slides/light.html#introduction",
    "href": "slides/light.html#introduction",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Introduction",
    "text": "Introduction\n\n\nVersion courte de la formation aux bonnes pratiques avec R et Git (page d’accueil)"
  },
  {
    "objectID": "slides/light.html#la-notion-de-bonnes-pratiques",
    "href": "slides/light.html#la-notion-de-bonnes-pratiques",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "La notion de bonnes pratiques",
    "text": "La notion de bonnes pratiques\n\nOrigine : communauté des développeurs logiciels\nConstats :\n\nle “code est plus souvent lu qu’écrit” (Guido Van Rossum)\nla maintenance d’un code est très coûteuse\n\nConséquence : un ensemble de règles informelles, conventionnellement acceptées comme produisant des logiciels fiables, évolutifs et maintenables"
  },
  {
    "objectID": "slides/light.html#pourquoi-sintéresser-aux-bonnes-pratiques",
    "href": "slides/light.html#pourquoi-sintéresser-aux-bonnes-pratiques",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Pourquoi s’intéresser aux bonnes pratiques ?",
    "text": "Pourquoi s’intéresser aux bonnes pratiques ?\n\nL’activité du statisticien / datascientist tend à se rapprocher de celle du développeur :\n\nprojets intenses en code\nprojets collaboratifs et de grande envergure\ncomplexification des données et donc des infrastructures\ndéploiement d’applications pour valoriser les analyses"
  },
  {
    "objectID": "slides/light.html#bonnes-pratiques-et-reproductibilité",
    "href": "slides/light.html#bonnes-pratiques-et-reproductibilité",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Bonnes pratiques et reproductibilité",
    "text": "Bonnes pratiques et reproductibilité\n\n\n\n\n\nSource : Peng R., Reproducible Research in Computational Science, Science (2011)\n\nUne reproductibilité parfaite est coûteuse\nGit est un standard atteignable et efficient\n\n\n\n\n\n\n\n\nNote\n\n\nQuel socle de bonnes pratiques pour les projets statistiques en  ?"
  },
  {
    "objectID": "slides/light.html#horizon-de-cette-formation",
    "href": "slides/light.html#horizon-de-cette-formation",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Horizon de cette formation",
    "text": "Horizon de cette formation\nUn point de départ commun"
  },
  {
    "objectID": "slides/light.html#horizon-de-cette-formation-1",
    "href": "slides/light.html#horizon-de-cette-formation-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Horizon de cette formation",
    "text": "Horizon de cette formation\nUn point de départ commun \nUne structuration de projet plus viable"
  },
  {
    "objectID": "slides/light.html#plan-de-la-partie",
    "href": "slides/light.html#plan-de-la-partie",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Plan de la partie",
    "text": "Plan de la partie\n1️⃣ Le contrôle de version : pourquoi faire ?\n2️⃣ Le contrôle de version avec Git"
  },
  {
    "objectID": "slides/light.html#archiver-son-code-proprement",
    "href": "slides/light.html#archiver-son-code-proprement",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Archiver son code proprement",
    "text": "1️⃣ Archiver son code proprement\npour en finir avec ça :"
  },
  {
    "objectID": "slides/light.html#archiver-son-code-proprement-1",
    "href": "slides/light.html#archiver-son-code-proprement-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Archiver son code proprement",
    "text": "1️⃣ Archiver son code proprement\nou ça :"
  },
  {
    "objectID": "slides/light.html#archiver-son-code-proprement-2",
    "href": "slides/light.html#archiver-son-code-proprement-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Archiver son code proprement",
    "text": "1️⃣ Archiver son code proprement\nou encore ça :\nprior &lt;- read_csv(prior_path)\nprior &lt;- prior %&gt;%\n    select(id, proba_inter, proba_build, proba_rfl) %&gt;%\n    separate(id, into = c('nidt', 'grid_id'), sep = \":\") %&gt;%\n    group_by(nidt) %&gt;%\n    mutate(\n        proba_build = proba_build/sum(proba_build),\n        proba_rfl = proba_rfl/sum(proba_rfl),\n        ) %&gt;%\n    unite(col = \"id\", nidt, grid_id, sep = \":\")\n\n# Test\n# prior_test &lt;- prior %&gt;%\n#    mutate(\n#        proba_inter = round(proba_inter, 4)\n#        proba_build = round(proba_build, 4)\n#        proba_rfl = round(proba_rfl, 4)\n#    )\n\nwrite_csv(prior_round, \"~/prior.csv\")"
  },
  {
    "objectID": "slides/light.html#archiver-son-code-proprement-3",
    "href": "slides/light.html#archiver-son-code-proprement-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Archiver son code proprement",
    "text": "1️⃣ Archiver son code proprement\nPour arriver à ça :\n\n\n\n\n\nSource : ThinkR"
  },
  {
    "objectID": "slides/light.html#voyager-dans-le-temps-de-votre-projet",
    "href": "slides/light.html#voyager-dans-le-temps-de-votre-projet",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "2️⃣ Voyager dans le temps (de votre projet)",
    "text": "2️⃣ Voyager dans le temps (de votre projet)"
  },
  {
    "objectID": "slides/light.html#une-collaboration-simplifiée-et-efficace",
    "href": "slides/light.html#une-collaboration-simplifiée-et-efficace",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "3️⃣ Une collaboration simplifiée et efficace",
    "text": "3️⃣ Une collaboration simplifiée et efficace\nUn modèle distribué\n\n\n\n\n\nSource : specbee.com"
  },
  {
    "objectID": "slides/light.html#une-collaboration-simplifiée-et-efficace-1",
    "href": "slides/light.html#une-collaboration-simplifiée-et-efficace-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "3️⃣ Une collaboration simplifiée et efficace",
    "text": "3️⃣ Une collaboration simplifiée et efficace\nQui permet l’expérimentation en toute sécurité\n\nSource : lutece.paris.fr"
  },
  {
    "objectID": "slides/light.html#une-collaboration-simplifiée-et-efficace-2",
    "href": "slides/light.html#une-collaboration-simplifiée-et-efficace-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "3️⃣ Une collaboration simplifiée et efficace",
    "text": "3️⃣ Une collaboration simplifiée et efficace\nQuel que soit l’environnement de travail"
  },
  {
    "objectID": "slides/light.html#une-collaboration-simplifiée-et-efficace-3",
    "href": "slides/light.html#une-collaboration-simplifiée-et-efficace-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "3️⃣ Une collaboration simplifiée et efficace",
    "text": "3️⃣ Une collaboration simplifiée et efficace\nAvec des outils pour faciliter la collaboration"
  },
  {
    "objectID": "slides/light.html#partager-son-code-à-un-public-large",
    "href": "slides/light.html#partager-son-code-à-un-public-large",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "4️⃣ Partager son code à un public large",
    "text": "4️⃣ Partager son code à un public large\nUne vitrine pour les projets et l’organisation"
  },
  {
    "objectID": "slides/light.html#en-résumé",
    "href": "slides/light.html#en-résumé",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "En résumé",
    "text": "En résumé\n\nConstruire et naviguer à travers l’historique de son projet\nLa collaboration rendue simple et efficace\nAméliorer la reproductibilité de ses projets\nAméliorer la visibilité de ses projets"
  },
  {
    "objectID": "slides/light.html#git-est-complexe",
    "href": "slides/light.html#git-est-complexe",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "⚠️ Git est complexe",
    "text": "⚠️ Git est complexe\nL’utilisation de Git nécessite certaines notions préalables:\n\nFonctionnement d’un filesystem\nConnaissance basique du terminal Linux\nPotentiellement, un grand nombre de commandes\n\n\n\n\n\nSource : iulianacosmina.com"
  },
  {
    "objectID": "slides/light.html#git-est-complexe-1",
    "href": "slides/light.html#git-est-complexe-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "⚠️ Git est complexe",
    "text": "⚠️ Git est complexe\nMais\n\nL’usage quotidien n’implique que quelques commandes\nLes messages de Git sont très informatifs\nEnormément de ressources disponibles sur internet\nDes interfaces visuelles (ex: RStudio, Sublime Merge, VS Code) qui facilitent l’apprentissage\nUn petit investissement individuel pour de gros gains collectifs"
  },
  {
    "objectID": "slides/light.html#concepts",
    "href": "slides/light.html#concepts",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Concepts",
    "text": "Concepts\nGit, GitHub, GitLab… quelles différences ?\n\nGit est un logiciel ;\nUtilisation en ligne de commandes\nDifférentes interfaces graphiques (RStudio, VS Code…)"
  },
  {
    "objectID": "slides/light.html#concepts-1",
    "href": "slides/light.html#concepts-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Concepts",
    "text": "Concepts\nGit, GitHub, GitLab… quelles différences ?\n\nGitHub et GitLab sont des forges logicielles\nForge: espace d’archivage de code\nDes fonctionalités supplémentaires : réseau social du code\n\n\n\n\n\n\n\nAstuce\n\n\n\nGitHub : utilisation pour les projets open-source\nGitLab : utilisation pour les projets internes"
  },
  {
    "objectID": "slides/light.html#concepts-2",
    "href": "slides/light.html#concepts-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Concepts",
    "text": "Concepts\nDépôt local / dépôt distant (remote)\n\n\n\n\n\n\nPar défaut, le dépôt distant porte l’alias origin"
  },
  {
    "objectID": "slides/light.html#concepts-3",
    "href": "slides/light.html#concepts-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Concepts",
    "text": "Concepts\nWorkflow local\n\n\n\n\n\nSource : Git Documentation"
  },
  {
    "objectID": "slides/light.html#concepts-4",
    "href": "slides/light.html#concepts-4",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Concepts",
    "text": "Concepts\nWorkflow complet\n\n\n\nSource : itnext.io"
  },
  {
    "objectID": "slides/light.html#commandes-essentielles",
    "href": "slides/light.html#commandes-essentielles",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Commandes essentielles",
    "text": "Commandes essentielles\n\n\n\n\nAction\nCommande\n\n\n\n\nCloner un projet\ngit clone [url-to-git-repo]\n\n\nAfficher les changements\ngit status\n\n\nRetrouver l’URL du dépôt distant\ngit remote -v"
  },
  {
    "objectID": "slides/light.html#commandes-essentielles-1",
    "href": "slides/light.html#commandes-essentielles-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Commandes essentielles",
    "text": "Commandes essentielles\n\n\n\n\n\n\n\n\nAction\nCommande\n\n\n\n\nAjouter des changements à l’index de Git (stage fixes)\nUn seul fichier : git add &lt;file-name&gt;  Tous les fichiers déjà indexés : git add -u  Tous les fichiers ⚠️ : git add -A\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\nLa méthode git add -A peut amener à suivre les modifications de fichiers qui ne devraient pas l’être (par exemple, des données).\nIl est recommandé de bien réfléchir avant de l’utiliser (ou d’avoir un bon .gitignore)"
  },
  {
    "objectID": "slides/light.html#commandes-essentielles-2",
    "href": "slides/light.html#commandes-essentielles-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Commandes essentielles",
    "text": "Commandes essentielles\n\n\n\n\n\n\n\n\nAction\nCommande\n\n\n\n\nFaire un commit\ngit commit -m \"message\"\n\n\nPousser les changements locaux vers le dépôt distant (branche master)\ngit push origin master\n\n\nRécupérer les changements sur le dépôt distant (branche master)\ngit pull origin master"
  },
  {
    "objectID": "slides/light.html#modes-dauthentification",
    "href": "slides/light.html#modes-dauthentification",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Modes d’authentification",
    "text": "Modes d’authentification\n\n\n insee\n\n\n\n\nhttps\n\ngit clone https://github.com/username/projet.git\nsimple à utiliser\nauthentification username + password (ou token) à chaque push\n\nssh\n\ngit clone git@github.com:username/projet.git\n(plus) complexe à initialiser\nauthentification automatique\n\n\n\n\n\n\n\nhttps\n\ngit clone https://gitlab.insee.fr/username_or_groupname/projet.git\nsimple à utiliser\nauthentification username + password (ou token) à chaque push\n\nssh\n\ngit clone git@gitlab.insee.fr:username_or_groupname/projet.git\n(plus) complexe à initialiser\nauthentification automatique"
  },
  {
    "objectID": "slides/light.html#application-0",
    "href": "slides/light.html#application-0",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 0",
    "text": "Application 0\n\n insee\n\n\n\n\n\nPréparation de l’environnement de travail\n\n\n\n\nCréer un compte GitHub\nCréer un nouveau dépôt privé sur GitHub en incluant un fichier README\nCréer un compte sur le SSP Cloud\nLancer un service RStudio. Dans l’onglet de configuration Git du service, fixer la durée du Cache pour le stockage des identifiants GitHub à une valeur suffisamment élevée\nCloner le dépôt distant sur votre environnement local (ici, le RStudio du Datalab):\n\nFile → New project → Version Control → Git\n\nGénérer un token (jeton d’authentification) sur GitHub\nStocker le token sur le SSP Cloud (ou un gestionnaire de mot de passe) :\n\nMon Compte -&gt; Git -&gt; Token d'accès personnel pour Forge Git\n\nTerminer la procédure de clonage en fournissant le nom d’utilisateur GitHub et le token\n\n\n\n\n\n\n\n\n\n\nPréparation de l’environnement de travail\n\n\n\n\nCompte déjà créé sur le gitlab interne\nCréer un nouveau dépôt privé sur gitlab.insee.fr\nCréer un compte sur LS3 via AUS.\nLancer un service RStudio. Dans l’onglet de configuration Git du service, fixer la durée du Cache pour le stockage des identifiants Gitlab à une valeur suffisamment élevée\nCloner le dépôt distant sur votre environnement local (ici, le RStudio de la plateforme LS3):\n\nFile → New project → Version Control → Git\n\nGénérer un token (jeton d’authentification) sur gitlab.insee.fr\nStocker le token sur LS3 (ou un gestionnaire de mot de passe) :\n\nMon Compte -&gt; Git -&gt; Token d'accès personnel pour Forge Git\n\nTerminer la procédure de clonage en fournissant le nom d’utilisateur (IDEP) et le token\n\n\n\n\n\n\n\n\n❓ Question : qu’est ce qui différencie le projet cloné d’un projet quelconque ?"
  },
  {
    "objectID": "slides/light.html#application-1",
    "href": "slides/light.html#application-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 1",
    "text": "Application 1\n\n\n\nPremiers commits\n\n\n\n\nCréer un dossier 📁 scripts\nY créer les fichiers script1.R et script2.R, chacun contenant quelques commandes R de votre choix\nAjouter ces fichiers à la zone de staging de Git en les cochant dans l’interface RStudio\nEffectuer un commit, auquel on donnera un message descriptif pertinent\nSupprimer le fichier script1.R et modifier le contenu du fichier script2.R\nAnalyser ce qui se passe lorsque l’on coche ces fichiers dans l’interface RStudio\nEffectuer un nouveau commit pour ajouter ces modifications à l’historique\nVisualiser l’historique du projet à partir de l’interface graphique de RStudio\n\n\n\n\n\n❓ Question : à ce stade, le dépôt du projet sur GitHub / Gitlab (remote) a-t-il été modifié ?"
  },
  {
    "objectID": "slides/light.html#application-2",
    "href": "slides/light.html#application-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 2",
    "text": "Application 2\n\n\n\nInteractions avec le dépôt distant\n\n\n\n\nEffectuer un push pour intégrer les changements locaux au projet distant\nParcourir l’historique du projet sur GitHub / Gitlab\n\nFaire apparaître les différences entre deux versions consécutives du projet\nAfficher une version passée du projet"
  },
  {
    "objectID": "slides/light.html#bonnes-pratiques",
    "href": "slides/light.html#bonnes-pratiques",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Bonnes pratiques",
    "text": "Bonnes pratiques\nQue versionne-t-on ?\n\nEssentiellement du code source\nPas d’outputs (fichiers .html, .pdf, modèles…)\nPas de données, d’informations locales ou sensibles\n\n\n\n\n\n\n\n\nNote\n\n\nPour définir des règles qui évitent de committer tel ou tel fichier, on utilise un fichier nommé .gitignore.\nSi on mélange du code et des éléments annexes (output, données…) dans un même dossier, il faut consacrer du temps à ce fichier.\nDes modèles de .gitignore existent sur internet, par exemple celui-ci pour les projets .\nN’hésitez pas à y ajouter des règles conservatrices (par exemple *.csv), comme cela est expliqué dans la documentation utilitR."
  },
  {
    "objectID": "slides/light.html#bonnes-pratiques-1",
    "href": "slides/light.html#bonnes-pratiques-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Bonnes pratiques",
    "text": "Bonnes pratiques\nFormat des commits\n\n\n\n\n\n\n\nFréquence\n\nAussi souvent que possible\nLe lot de modifications doit “avoir du sens”\n\nMessages\n\nCourts et informatifs (comme un titre de mail)\nDécrire le pourquoi plutôt que le comment dans le texte"
  },
  {
    "objectID": "slides/light.html#application-3",
    "href": "slides/light.html#application-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 3",
    "text": "Application 3\n\n\n\nLe fichier .gitignore\n\n\n\nL’objectif de cette application est de créer le fichier .gitignore, qui permet de spécifier l’ensemble des fichiers et/ou dossiers que l’on souhaite exclure de l’indexation faite par Git. Il doit se situer à la racine du projet.\n\nCréer un fichier texte nommé .gitignore à la racine du projet (attention à ne pas ajouter d’extension au fichier, type .txt)\nCréer un dossier data à la racine du projet et créer à l’intérieur de celui-ci un fichier data/raw.csv avec une ligne de données quelconque\nAjouter une première règle au fichier .gitignore qui exclue le dossier data/, et vérifier que la règle fonctionne\nAjouter une seconde règle excluant tous les fichiers de type *.pdf et *.html, et vérifier que la règle fonctionne\n\n\n\n\n\n❓ Question : que se passe-t-il lorsque l’on ajoute au .gitignore des fichiers qui ont déjà été commit sur le projet Git ?\n\n\n\n\nDes fichiers .gitignore standards\n\n\nDans cette application, nous avons généré le fichier .gitignore manuellement. En pratique, il existe des .gitignore standards adaptés pour chaque langage de programmation, qui implémentent déjà de nombreuses règles pertinentes. Le mieux est donc de partir du .gitignore R pour tout nouveau projet R, et de rajouter les règles spécifiques que l’on souhaite appliquer au projet."
  },
  {
    "objectID": "slides/light.html#ressources-supplémentaires",
    "href": "slides/light.html#ressources-supplémentaires",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Ressources supplémentaires",
    "text": "Ressources supplémentaires\n\nLa documentation utilitR propose plusieurs chapitres sur Git\nCours Reproductibilité et bonnes pratiques pour les projets de data science de l’ENSAE\nLa Bible de l’usage de Git"
  },
  {
    "objectID": "slides/light.html#plan-de-la-partie-1",
    "href": "slides/light.html#plan-de-la-partie-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Plan de la partie",
    "text": "Plan de la partie\n1️⃣ Qualité du code\n2️⃣ Structure des projets\n3️⃣ Formats de données"
  },
  {
    "objectID": "slides/light.html#application-0-1",
    "href": "slides/light.html#application-0-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 0",
    "text": "Application 0\n\n insee\n\n\n\n\n\nPréparation de l’environnement de travail\n\n\n\n\nCréer un dépôt sur Github  en incluant un fichier README et un .gitignore (chercher le modèle R dans les suggestions)\nLancer un service RStudio. Dans l’onglet de configuration Git du service, fixer la durée du Cache pour le stockage des identifiants GitHub à une valeur suffisamment élevée (conseil: 36000)\nCloner le dépôt distant sur votre environnement local (ici, le RStudio du Datalab):\n\nFile → New project → Version Control → Git\n\nCréer un script get_data.R en copiant le contenu de ce fichier, puis l’exécuter\nCréer le script script.R dans votre dépôt en copiant le contenu de ce fichier. Ne l’exécutez pas, c’est l’objet de l’exercice suivant.\nAjouter la règle “RPindividus*” au fichier .gitignore. Que signifie-t-elle ?\nCommit/push les changements (tous les fichiers, y compris ceux que Git a ajouté)\n\n\n\n\n\n\n\n\n\n\nPréparation de l’environnement de travail\n\n\n\n\nCréer un nouveau dépôt public sur GitLab\nLancer un service RStudio. Dans l’onglet de configuration Git du service, fixer la durée du Cache pour le stockage des identifiants GitLab à une valeur suffisamment élevée\nCloner le dépôt distant sur votre environnement local (ici, le RStudio de LS3):\n\nFile → New project → Version Control → Git\n\nCréer un script get_data.R en copiant le contenu de ce fichier, puis l’exécuter\nCréer le script script.R dans votre dépôt en copiant le contenu de ce fichier\nAjouter la règle “individu_reg.*” au fichier .gitignore. Que signifie-t-elle ?\nCommit/push les changements"
  },
  {
    "objectID": "slides/light.html#enjeux",
    "href": "slides/light.html#enjeux",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Enjeux",
    "text": "Enjeux\n\nD’une vision utilitariste du code à une vision du code comme outil de communication\nFavoriser la lisibilité et la maintenabilité\nFaciliter la réutilisation\nAssurer la transparence méthodologique"
  },
  {
    "objectID": "slides/light.html#principes-généraux",
    "href": "slides/light.html#principes-généraux",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Principes généraux",
    "text": "Principes généraux\n1️⃣ Adopter les standards communautaires\n2️⃣ Eviter la duplication de code\n3️⃣ (Auto)-documenter son code\n4️⃣ Isoler la configuration du code"
  },
  {
    "objectID": "slides/light.html#adopter-les-standards-communautaires",
    "href": "slides/light.html#adopter-les-standards-communautaires",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Adopter les standards communautaires",
    "text": "1️⃣ Adopter les standards communautaires\n\n“Good coding style is like correct punctuation: you can manage without it, butitsuremakesthingseasiertoread”\nTidyverse Style Guide\n\n\nRespecter les conventions du langage dans lequel il est rédigé\nIl existe un guide de référence pour bien coder en R : le Tidyverse style guide."
  },
  {
    "objectID": "slides/light.html#adopter-les-standards-communautaires-1",
    "href": "slides/light.html#adopter-les-standards-communautaires-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Adopter les standards communautaires",
    "text": "1️⃣ Adopter les standards communautaires\nDeux outils pratiques aident à respecter les standards :\n\nlinter : programme qui vérifie que le code est formellement conforme à un certain guidestyle\n\nsignale problèmes formels, sans corriger\n\nformatter : programme qui reformate un code pour le rendre conforme à un certain guidestyle\n\nmodifie directement le code\n\n\n\n\n\n\n\n\n\nAstuce\n\n\n\n\nExemples d’erreurs repérées par un linter :\n\nlignes de code trop longues ou mal indentées, parenthèses non équilibrées, noms de fonctions mal construits…\n\nExemples d’erreurs non repérées par un linter :\n\nfonctions mal utilisées, arguments mal spécifiés, structure du code incohérente, code insuffisamment documenté…"
  },
  {
    "objectID": "slides/light.html#adopter-les-standards-communautaires-2",
    "href": "slides/light.html#adopter-les-standards-communautaires-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Adopter les standards communautaires",
    "text": "1️⃣ Adopter les standards communautaires\n\nDans le cas de  :\n\nle linter à utiliser est le package lintr\nle formatter à utiliser est le package styler.\n\nExiste également le package formatR."
  },
  {
    "objectID": "slides/light.html#utiliser-des-fonctions",
    "href": "slides/light.html#utiliser-des-fonctions",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "2️⃣ Utiliser des fonctions",
    "text": "2️⃣ Utiliser des fonctions\n\n\n\n\n\n\nRègle d’or\n\n\nIl faut utiliser une fonction dès qu’on utilise une même portion de code plus de deux fois (don’t repeat yourself (DRY))\n\n\n\n\nLimite les risques d’erreurs liés aux copier/coller\nRend le code plus lisible et plus compact\nUn seul endroit du code à modifier lorsqu’on souhaite modifier le traitement\nFacilite la réutilisation et la documentation du code !\n\n\n\n\n\n\n\n\nRègles pour écrire des fonctions pertinentes\n\n\n\n\nUne tâche = une fonction\nUne tâche complexe = un enchaînement de fonctions réalisant chacune une tâche simple\nLimiter l’utilisation de variables globales."
  },
  {
    "objectID": "slides/light.html#documenter-son-code",
    "href": "slides/light.html#documenter-son-code",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "3️⃣ Documenter son code",
    "text": "3️⃣ Documenter son code\n\nGrands principes :\n\nDocumenter le pourquoi plutôt que le comment\nPrivilégier l’auto-documentation\n\n\n\n\n\n\n\n\n\nComment bien documenter un script ?\n\n\n\n\nMinimum 🚦 : commentaire au début du script pour décrire ce qu’il fait\nBien 👍 : commenter les parties “délicates” du code\nIdéal 💪 : documenter ses fonctions avec la syntaxe roxygen2."
  },
  {
    "objectID": "slides/light.html#documenter-son-code-1",
    "href": "slides/light.html#documenter-son-code-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "3️⃣ Documenter son code",
    "text": "3️⃣ Documenter son code\n\n\n\n\n\n\nL’auto-documentation en pratique\n\n\n👎 La documentation pallie des mauvais nommages\n# Utilise string si x est non manquant et non vide\nif (!is.na(x) && nzchar(x)) {\n  use_string(x)\n}\n👍 Les nommages suffisent à comprendre le code\nx_is_not_empty_string &lt;- (!is.na(x) && nzchar(x))\nif (x_is_not_empty_string) {\n  use_string(x)\n}"
  },
  {
    "objectID": "slides/light.html#isoler-la-configuration-du-code",
    "href": "slides/light.html#isoler-la-configuration-du-code",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "4️⃣ Isoler la configuration du code",
    "text": "4️⃣ Isoler la configuration du code\n\nRappel : on vise une structure modulaire\n\n\n\n\nEn pratique : isoler les packages et les secrets"
  },
  {
    "objectID": "slides/light.html#gestion-des-packages",
    "href": "slides/light.html#gestion-des-packages",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "4️⃣ Gestion des packages",
    "text": "4️⃣ Gestion des packages\n\nExternaliser l’installation des packages nécessaires\n\nLe code ne doit pas modifier l’environnement\nOù ? Dans le README ou des fichiers spécialisés (DESCRIPTION ou renv.lock)\n\nExpliciter l’appel des packages avec la syntaxe package::fonction()\n\nFavorise la lisibilité du code\nLimite les risques de fonctions “masquées”\n\n\n\n\n\n\n\n\n\nExemple\n\n\n\n\npackage1 et package2 contiennent chacun une fonction appelée super_fonction.\nSi package2 est chargé après package1, alors la fonction de package1 est automatiquement masquée et super_fonction désigne par défaut la fonction de package2.\nMieux vaut noter package1::superFonction et package2::superFonction"
  },
  {
    "objectID": "slides/light.html#gestion-des-secrets",
    "href": "slides/light.html#gestion-des-secrets",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "4️⃣ Gestion des secrets",
    "text": "4️⃣ Gestion des secrets\n\nLes secrets (mots de passe, tokens, etc.) sont des données sensibles\nQuelques principes de sécurité essentiels\n\nUtiliser des tokens plutôt que des mots de passe\nUtiliser des comptes de service (quand c’est possible)\nJamais de secrets en clair dans le code\n\nEn pratique, deux recommendations selon l’usage\n\nDemander interactivement le secret à l’utilisateur\nSpécifier des variables d’environnement via le fichier .Renviron (⚠️ à ajouter au .gitignore)"
  },
  {
    "objectID": "slides/light.html#ressources-supplémentaires-1",
    "href": "slides/light.html#ressources-supplémentaires-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Ressources supplémentaires",
    "text": "Ressources supplémentaires\n\n\nUne présentation de Maëlle Salmon sur le « code beau ».\nUne présentation très complète sur le partage de code et de données avec R\nUne documentation (en anglais) sur la gestion des secrets (tokens, mots de passe, etc.)"
  },
  {
    "objectID": "slides/light.html#application-1-1",
    "href": "slides/light.html#application-1-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 1",
    "text": "Application 1\n\n\n\nPartie 1 : vérification du bon fonctionnement du code\n\n\nUn code reproductible est avant toute chose un code fonctionnel !\n\nRepérez les erreurs qui empêchent le script script.R de s’exécuter correctement, et les corriger.\nRedémarrer votre session avec Session &gt; New Session (ou Ctrl+Maj+F10)\n\n\n\n\n\n\n\n\n\n\nLes pièges que cet exercice vous montre\n\n\n\n\nLes fonctions utilisées sans import des packages\nLes chemins et le working directory\nL’ordre des imports\nLes mauvaises pratiques de gestion de l’environnement (les bonnes pratiques arrivent dans les prochains exercices !)"
  },
  {
    "objectID": "slides/light.html#application-1-2",
    "href": "slides/light.html#application-1-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 1",
    "text": "Application 1\n\n\n\nPartie 2 : premiers standards de qualité\n\n\n\n\nInstaller les packages R lintr et styler1.\nDéfinir le linter à utiliser comme étant de type tidyverse avec lintr::use_lintr(type = \"tidyverse\")\nDiagnostiquer le script script.R avec lintr::lint(\"script.R\").\n\nComprenez-vous la nature des problèmes détectés par le linter?\n\nAppliquer le formatter au script.R avec styler::style_file(\"script.R\").\nRefaire tourner le linter. Il reste encore un certain nombre d’erreurs de formattage, car styler est un formatter peu intrusif.\nRegarder les problèmes restants repérés par le linter, et en corriger quelques uns (un pour chaque type de problème).\n\n\n\n\n\nLes install.packages sont à faire en console et ne doivent pas être mis dans le script (justification dans la prochaine partie de cet exercice)."
  },
  {
    "objectID": "slides/light.html#application-1-3",
    "href": "slides/light.html#application-1-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 1",
    "text": "Application 1\n\n\n\nPartie 3 : une meilleure gestion des packages utilisés\n\n\n\n\nLimiter les ambiguités sur les packages en utilisant la syntaxe package::fonction pour les packages rarement utilisés dans le script.\nL’installation des packages dans un script n’est pas une bonne pratique. Supprimer les instructions correspondantes.\nImporter le tidyverse au complet est rarement utile. N’importer à la place que les packages effectivement utilisés dans le script.\n\n\n\nA propos du rm(list = ls()) (le supprimer !)\n\nCette commande est une mauvaise pratique.\nOn la retrouve encore dans trop de scripts car elle est utilisée pour de mauvaises raisons. Elle ne remets pas à 0 votre environnement: elle supprime juste les données de celui-ci, sans toucher au reste (packages importés, etc.).\nIl vaut mieux gérer cela en changeant les options de  puis redémarrer la session  (CTRL+SHIFT+F10)"
  },
  {
    "objectID": "slides/light.html#application-1-4",
    "href": "slides/light.html#application-1-4",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 1",
    "text": "Application 1\n\n\n\nPartie 4 : (auto-)documentation du code\n\n\n\nL’objectif de cet exercice est de remettre de l’ordre dans le script, cela le rendra bien plus lisible.\n\nDéplacer les library pour les mettre tous ensemble au début du script.\nLe script n’est pas construit dans un ordre logique. Déplacer les parties pour adopter une structure plus lisible :\n\nGestion de l’environnement -&gt; Définition de fonctions -&gt; Import des données -&gt; Retraitement des données -&gt; Statistiques descriptives -&gt; Graphiques -&gt; Modélisation\n\nDonner des titres aux parties/sous-parties en utilisant les standards de documentation reconnus par RStudio :\n\n# TITRE NIVEAU 1 ------------ et ## TITRE NIVEAU 2 ==========\n\n\nAu passage, vous pouvez changer les noms de certains objets pour les rendre moins cryptiques (df3 n’est pas très clair)."
  },
  {
    "objectID": "slides/light.html#application-1-5",
    "href": "slides/light.html#application-1-5",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 1",
    "text": "Application 1\n\n\n\nPartie 5 : une meilleure gestion des secrets\n\n\n\nDans cette application, on va explorer deux manières possibles de gérer les secrets proprement.\nPremière possibilité : de manière interactive.\n\nRepérer le jeton d’API dans le code et le retirer, en le stockant temporairement ailleurs.\nUtiliser la fonction askForPassword du package rstudioapi, qui permet de demander à l’utilisateur d’entrer le secret à l’aide d’un pop-up interactif.\nVérifier le bon fonctionnement de la solution implémentée.\n\n⚠️ Cette solution nécessite l’exécution du code dans un environnement RStudio, ce qui implique un usage en self.\nDeuxième possibilité : via les variables d’environnement.\n\nSupprimer la solution précédente (pop-up interactif) et redémarrer le kernel R\nCréer un fichier .Renviron (voir cette fiche UtilitR pour plus d’info sur ce fichier) à la racine du projet et y ajouter une ligne JETON_API=xxx en remplaçant xxx par la valeur du jeton.\nImporter la valeur du jeton dans une variable api_token à l’aide de la fonction Sys.getenv.\nVérifier le bon fonctionnement de la solution implémentée.\nVérifier que l’exclusion du .Renviron est bien renseigné dans le .gitignore. Si ce n’est pas le cas, ajouter la règle et vérifier son bon fonctionnement, puis commit/push."
  },
  {
    "objectID": "slides/light.html#checkpoint",
    "href": "slides/light.html#checkpoint",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Checkpoint",
    "text": "Checkpoint\n\n\n\n\n\n\n\nCheckpoint\n\n\n\nLe script script.R\nLe .gitignore"
  },
  {
    "objectID": "slides/light.html#bilan",
    "href": "slides/light.html#bilan",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Bilan",
    "text": "Bilan\n\n\n\nUn code mal structuré\n\nLimite la lisibilité du projet\nEst très coûteux à maintenir (dette technique)\n\nLes petits gestes peuvent économiser un temps précieux"
  },
  {
    "objectID": "slides/light.html#enjeux-1",
    "href": "slides/light.html#enjeux-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Enjeux",
    "text": "Enjeux\n\nFavoriser la lisibilité et la maintenabilité\nConstruire des projets reproductibles"
  },
  {
    "objectID": "slides/light.html#a-ne-pas-reproduire-chez-vous",
    "href": "slides/light.html#a-ne-pas-reproduire-chez-vous",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "⚠️ A ne pas reproduire chez vous",
    "text": "⚠️ A ne pas reproduire chez vous\n\n├── report.Rmd\n├── correlation.png\n├── data.csv\n├── data2.csv\n├── fig1.png\n├── figure 2 (copy).png\n├── report.pdf\n├── partial data.csv\n├── script.R\n└── script_final.R\nSource : eliocamp.github.io"
  },
  {
    "objectID": "slides/light.html#principes-généraux-1",
    "href": "slides/light.html#principes-généraux-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Principes généraux",
    "text": "Principes généraux\n\nUtiliser les projets RStudio\nOrganiser son projet en sous-dossiers\nDonner des noms pertinents aux fichiers\nDocumenter son projet\n(Faire de son projet un package)"
  },
  {
    "objectID": "slides/light.html#utiliser-les-projets-rstudio",
    "href": "slides/light.html#utiliser-les-projets-rstudio",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Utiliser les projets RStudio",
    "text": "1️⃣ Utiliser les projets RStudio\n\nObjectif : favoriser la reproductibilité\n\nTous les fichiers nécessaires au projet dans un même dossier\nLe dossier contenant le projet RStudio est automatiquement utilisé comme working directory\nUtilisation de chemins relatifs plutôt qu’absolus.\n\nBonus : en utilisant Git, on s’assure de toujours travailler dans un projet RStudio !"
  },
  {
    "objectID": "slides/light.html#organiser-son-projet-en-sous-dossiers",
    "href": "slides/light.html#organiser-son-projet-en-sous-dossiers",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "2️⃣ Organiser son projet en sous-dossiers",
    "text": "2️⃣ Organiser son projet en sous-dossiers\n\n\nObjectif : adopter une structure arbitraire, mais lisible et cohérente\n\n├── data\n│   ├── raw\n│   │   ├── data.csv\n│   │   └── data2.csv\n│   └── derived\n│       └── partial data.csv\n├── R\n|   ├── script.R\n│   ├── script_final.R\n│   └── report.Rmd\n└── output\n    ├── fig1.png\n    ├── figure 2 (copy).png\n    ├── figure10.png\n    ├── correlation.png\n    └── report.pdf"
  },
  {
    "objectID": "slides/light.html#donner-des-noms-pertinents-aux-fichiers",
    "href": "slides/light.html#donner-des-noms-pertinents-aux-fichiers",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "3️⃣ Donner des noms pertinents aux fichiers",
    "text": "3️⃣ Donner des noms pertinents aux fichiers\n\n\nObjectif : auto-documenter son projet\n\n├── data\n│   ├── raw\n│   │   ├── dpe_logement_202103.csv\n│   │   └── dpe_logement_202003.csv\n│   └── derived\n│       └── dpe_logement_merged_preprocessed.csv\n├── R\n|   ├── preprocessing.R\n│   ├── generate_plots.R\n│   └── report.Rmd\n└── output\n    ├── histogram_energy_diagnostic.png\n    ├── barplot_consumption_pcs.png\n    ├── correlation_matrix.png\n    └── report.pdf"
  },
  {
    "objectID": "slides/light.html#documenter-son-projet",
    "href": "slides/light.html#documenter-son-projet",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "4️⃣ Documenter son projet",
    "text": "4️⃣ Documenter son projet\n\nLe fichier README.md, situé à la racine du projet, est à la fois la carte d’identité et la vitrine du projet\nIdéalement, il contient :\n\nUne présentation du contexte et des objectifs\nUne description de son fonctionnement\nUn guide de contribution (open-source)\n\nQuelques modèles de README.md complets :\n\nutilitR\nDoReMIFaSol"
  },
  {
    "objectID": "slides/light.html#faire-de-son-projet-un-package",
    "href": "slides/light.html#faire-de-son-projet-un-package",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "5️⃣ Faire de son projet un package",
    "text": "5️⃣ Faire de son projet un package\n\nUn package est la forme maximale de modularité\n\nContient des fonctions rangées dans des modules\nContient également de la documentation, des tests, des (méta-)données…\n\nAvantages\n\nIdéal pour favoriser la réutilisation du code\nDes outils de développement : devtools et usethis\n\nInconvénients\n\nCoût de maintenance élevé"
  },
  {
    "objectID": "slides/light.html#ressources-supplémentaires-2",
    "href": "slides/light.html#ressources-supplémentaires-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Ressources supplémentaires",
    "text": "Ressources supplémentaires\n\n\nLa documentation utilitR sur les projets RStudio et les packages R\nLa bible des packages R"
  },
  {
    "objectID": "slides/light.html#application-2-1",
    "href": "slides/light.html#application-2-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 2",
    "text": "Application 2\n\n\n\nPartie 1 : modularisation du projet\n\n\n\n\nDéplacer toutes les fonctions dans un fichier R/functions.R.\nDonner à la fonction fonction_de_stat_agregee un nom plus pertinent et des noms d’arguments plus transparents.\n\nDocumenter la fonction fonction_de_stat_agregee selon le standard roxygen. Vous pouvez vous aider d’une IA assistante comme ChatGPT, Claude ou Copilot, rien n’est sensible dans ce code (d’ailleurs rien de sensible ne doit être dans du code !).\nUtiliser les exemples d’utilisation de fonction_de_stat_agregee dans cette documentation.\n\nDans script.R, appeler en début de chaîne ces fonctions avec source(\"R/functions.R\", encoding = \"UTF-8\").\nTester le bon fonctionnement de script.R.\nSi votre chaîne écrit des outputs ou utilise des inputs (par exemple des données), restructurer l’aborescence du projet pour le rendre plus lisible et adaptez votre code en fonction.\nRenommer (voire déplacer) les scripts get_data.R et script.R pour rendre plus intelligible la chaîne de production.\nMettre à jour le .gitignore puis commit/push."
  },
  {
    "objectID": "slides/light.html#application-2-2",
    "href": "slides/light.html#application-2-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 2",
    "text": "Application 2\n\n\n\nPartie 2 : création d’un package (FACULTATIF)\n\n\n\n\nFermer le Rproj en cours (“Close Project” en haut à droite).\nInitialiser un package avec la fonction usethis::create_package() (par défaut dans le working directory)\nPlacer dans le dossier R du package un module stat.R et y copier la fonction de statistique agrégée\nRemplir le fichier DESCRIPTION. En particulier, spécifier les dépendances nécessaires (Imports) et facultatives (Suggests)\nConstruire la documentation du package avec la fonction devtools::document(). Où est-elle stockée et sous quel format ?\nCharger le package avec la fonction devtools::load_all() et vérifier que la fonction marche correctement\nVérifier que la documentation de notre fonction est accessible avec ?ma_fonction\n(Facultatif) Initialiser un nouveau projet sur GitHub est y mettre le code du package. Vérifier que le package peut être installé en local avec la fonction devtools::install_github()."
  },
  {
    "objectID": "slides/light.html#checkpoint-2",
    "href": "slides/light.html#checkpoint-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Checkpoint",
    "text": "Checkpoint\n\n\n\n\n\n\nCheckpoint\n\n\n\nLe script script.R\nLe script R/functions.R"
  },
  {
    "objectID": "slides/light.html#enjeux-2",
    "href": "slides/light.html#enjeux-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Enjeux",
    "text": "Enjeux\n\nLe choix d’un format de données répond à un arbitrage entre plusieurs critères :\n\nPublic cible\nFinalité (traitement, analyse, diffusion)\nVolumétrie\nInteropérabilité"
  },
  {
    "objectID": "slides/light.html#formats-traditionnels",
    "href": "slides/light.html#formats-traditionnels",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Formats traditionnels",
    "text": "Formats traditionnels\n\nFormats de données adhérents à un langage (sas7bdat, RDS, fst, etc.)\n\nNon-interopérables -&gt; à éviter !\n\nLe format CSV\n\nInteropérable et simple d’utilisation\nPas de gestion des méta-données\nPeu adapté aux données volumineuses"
  },
  {
    "objectID": "slides/light.html#limites-du-csv",
    "href": "slides/light.html#limites-du-csv",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Limites du CSV",
    "text": "Limites du CSV\n\nDes performances limitées\n\nStockage : non-compressé -&gt; espace disque élevé\nLecture : “orienté-ligne” -&gt; performances faibles"
  },
  {
    "objectID": "slides/light.html#le-format-parquet",
    "href": "slides/light.html#le-format-parquet",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Le format Parquet",
    "text": "Le format Parquet\n\nStockage :\n\nCompression : entre 5 et 20 fois plus léger qu’un CSV\n\n\n\n\n\n\n\n\n\n\nExemple: Recensement de la Population\n\n\n\nFicher détail : 20 millions de lignes, 92 variables\n\nCSV: &gt; 4Go\nParquet: &lt; 500Mo"
  },
  {
    "objectID": "slides/light.html#le-format-parquet-1",
    "href": "slides/light.html#le-format-parquet-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Le format Parquet",
    "text": "Le format Parquet\n\nLecture :\n\nJusqu’à 34x plus rapide qu’un CSV\n\n“Orienté colonne”\n\nOptimisé pour les traitements analytiques\nLimite la quantité de données à mettre en mémoire"
  },
  {
    "objectID": "slides/light.html#le-format-parquet-2",
    "href": "slides/light.html#le-format-parquet-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Le format Parquet",
    "text": "Le format Parquet\n\nPartitionner les données pour optimiser la lecture\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nL’art de bien partitionner\n\n\n\nPartitionner par une/des variable(s) d’intérêt\nEviter de créer de nombreux petits (&lt; 128Mo) fichiers"
  },
  {
    "objectID": "slides/light.html#le-format-parquet-3",
    "href": "slides/light.html#le-format-parquet-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Le format Parquet",
    "text": "Le format Parquet\n\nGestion native des méta-données\n\nDéfinition automatique d’un schéma (noms, types)\nMise à disposition plus robuste\n\nInteropérable\nOpen-source"
  },
  {
    "objectID": "slides/light.html#le-format-parquet-4",
    "href": "slides/light.html#le-format-parquet-4",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Le format Parquet",
    "text": "Le format Parquet\n\nDeux frameworks de référence : Arrow et DuckDB\n\nOrientation fichier (Arrow) VS orientation BDD (DuckDB)\nTrès bonne intégration avec le tidyverse\n\nTraitement en-mémoire optimisé\n\nOrientés-colonne\nLazy evaluation\n\n\n\n\n\n\n\n\n\n\nExemple d’une requête lazy\n\n\nn_logements_depcom &lt;- achille |&gt; \n  filter(dep %in% c(\"01\", \"02\", \"03\")) |&gt;  # Récupère seulement les données nécessaires\n  select(idlogement, depcom) |&gt;  # Récupère seulement les colonnes nécessaires\n  group_by(depcom) |&gt;\n  summarise(n_logements = n()) |&gt;  \n  collect()  # Les calculs ne sont effectués qu'à cette étape !"
  },
  {
    "objectID": "slides/light.html#le-format-parquet-5",
    "href": "slides/light.html#le-format-parquet-5",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Le format Parquet",
    "text": "Le format Parquet\n\nParquet gagne sur tous les tableaux"
  },
  {
    "objectID": "slides/light.html#application-3-1",
    "href": "slides/light.html#application-3-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 3",
    "text": "Application 3\n\n insee\n\n\n\n\n\n\nPartie 0 : préparation\n\n\n\nRemplacer le contenu du script get_data.R en copiant-collant le contenu de ce fichier. Exécuter ce script, il importe les fichiers nécessaires pour cette application.\n\n\n\n\n\n\n\n\n\n\n\nPartie 0 : préparation\n\n\n\nRemplacer le contenu du script get_data_ls3.R en copiant-collant le contenu de ce fichier. Exécuter ce script, il importe les fichiers nécessaires pour cette application."
  },
  {
    "objectID": "slides/light.html#application-3-2",
    "href": "slides/light.html#application-3-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 3",
    "text": "Application 3\n\n\n\n\nPartie 1 : Du CSV au Parquet\n\n\nTout au long de cette application, nous allons voir comment utiliser le format Parquet de manière la plus efficiente. Afin de comparer les différents formats et méthodes d’utilisation, nous allons comparer le temps d’exécution et l’usage mémoire d’une requête standard. Commençons par comparer les formats CSV et Parquet.\n\nRemplacer le contenu du script get_data.R en copiant-collant le contenu de ce fichier. Exécuter ce script, il importe les fichiers nécessaires dans cette application\nPour effectuer les comparaisons de performance, on va utiliser la fonction bench::mark. Analyser la documentation pour comprendre ce que la fonction attend en entrée.\nLa requête suivante permet de calculer les données pour construire une pyramide des âges sur un département donné, à partir du fichier CSV du recensement. Encapsuler la requête dans une fonction req_csv (sans argument).\n\nres &lt;- readr::read_csv(\"data/RPindividus_24.csv\") %&gt;% \n    filter(DEPT == \"36\") %&gt;%\n    group_by(AGED, DEPT) %&gt;%\n    summarise(n_indiv = sum(IPONDI))\n\nSur le même modèle, construire une fonction req_read_parquet basée cette fois sur le fichier data/RPindividus_24.parquet chargé avec la fonction read_parquet d’Arrow\nComparer les performances (temps d’exécution et allocation mémoire) de ces deux méthodes grâce à la fonction bench::mark, à laquelle on passera les paramètres iterations = 1 (comparaison à partir d’une seule itération) et check = FALSE (autorise les outputs des deux fonctions à être différents).\n\n\n\n\n\n❓️ Quelle semble être la limite de la fonction read_parquet ?"
  },
  {
    "objectID": "slides/light.html#application-3-3",
    "href": "slides/light.html#application-3-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 3",
    "text": "Application 3\n\n\n\n\nPartie 2 : Exploiter la lazy evaluation et les optimisations d’Arrow\n\n\nLa partie précédente a montré un gain de temps considérable du passage de CSV à Parquet. Néanmoins, l’utilisation mémoire était encore très élevée alors qu’on utilise de fait qu’une infime partie du fichier. Dans cette partie, on va voir comment utiliser la lazy evaluation et les optimisations du plan d’exécution effectuées par Arrow pour exploiter pleinement la puissance du format Parquet.\n\nUtiliser la fonction arrow::open_dataset pour ouvrir le fichier data/RPindividus_24.parquet. Regarder la classe de l’objet obtenu.\nAfficher les 5 premières lignes de la table avec la fonction head(). Observer l’objet obtenu (sortie en console, classe).\nAjouter une étape collect() à la fin de cette chaîne. Comprenez-vous la différence ?\nConstruire une fonction req_open_dataset sur le modèle de celles de la partie précédente, qui importe cette fois les données avec la fonction arrow::open_dataset\nComparer les performances (temps d’exécution et allocation mémoire) des trois méthodes (CSV, read_parquet et open_dataset) grâce à la fonction bench::mark\n\n\n\n\n\n❓️ Quelle méthode retenir pour lire un Parquet avec Arrow ?"
  },
  {
    "objectID": "slides/light.html#application-3-4",
    "href": "slides/light.html#application-3-4",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 3",
    "text": "Application 3\n\n\n\n\nPartie 3 : Le Parquet partitionné\n\n\nLa lazy evaluation et les optimisations d’Arrow apportent des gain de performance considérables. Mais on peut encore faire mieux ! Lorsqu’on sait qu’on va être amené à filter régulièrement les données selon une variable d’intérêt, on a tout intérêt à partitionner le fichier Parquet selon cette variable.\n\nParcourir la documentation de la fonction arrow::write_dataset pour comprendre comment spécifier la clé de partitionnement d’un fichier Parquet. Plusieurs méthodes sont possibles !\nDans une même chaîne, importer la table individus complète du recensement data/RPindividus.parquet avec la fonction arrow::open_dataset et l’exporter en une table data/RPindividus_dept.parquet partitionnée par le département (DEPT)\nObserver l’arborescence de fichiers de la table exportée\nModifier la fonction req_open_dataset de la partie précédente pour partir de la table complète (non-partitionnée) data/RPindividus.parquet au lieu de l’échantillon\nConstruire une fonction req_open_dataset_part sur le modèle de req_open_dataset, qui importe cette fois les données partitionnées data/RPindividus_dept.parquet. Ne pas oublier de spécifier le paramètre hive_style = TRUE.\nComparer les performances (temps d’exécution et allocation mémoire) des deux méthodes grâce à la fonction bench::mark\n\n\n\n\n\n\n❓️ Dans le cadre d’une mise à disposition de données en Parquet auprès d’utilisateurs :\n\nComment bien choisir la/les clé(s) de partitionnement ?\nQuelle est la limite à garder en tête ?"
  },
  {
    "objectID": "slides/light.html#application-3-5",
    "href": "slides/light.html#application-3-5",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Application 3",
    "text": "Application 3\n\n\n\n\nPartie 4 : mise à jour de la chaîne de production\n\n\nConvaincus par ce comparatif, nous allons maintenant mettre à jour le format des données utilisées pour notre chaîne de production.\n\nModifier le script script.R pour importer les données d’entrée de votre chaîne à partir de la table Parquet partitionnée par département\nVérifier que le code tourne de A à Z et l’adapter si ce n’est pas le cas\n\n\n\n\n\n❓️ Cette mise à jour des données utilisées en source de la chaîne de production vous semble-t-elle complexe ? Pourquoi ?"
  },
  {
    "objectID": "slides/light.html#checkpoint-4",
    "href": "slides/light.html#checkpoint-4",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Checkpoint",
    "text": "Checkpoint\n\n\n\n\n\n\n\nCheckpoint\n\n\n\nLe script script.R"
  },
  {
    "objectID": "slides/light.html#ressources-supplémentaires-3",
    "href": "slides/light.html#ressources-supplémentaires-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Ressources supplémentaires",
    "text": "Ressources supplémentaires\n\nLa documentation utilitR\nCours Reproductibilité et bonnes pratiques pour les projets de data science de l’ENSAE\nUn cours complet (en anglais) sur la reproductibilité avec R\nConférence “R in production” d’Hadley Wickham (en anglais)\nLe cours (en construction) “R in production” d’Hadley Wickham (en anglais)"
  },
  {
    "objectID": "slides/light.html#conclusion-2",
    "href": "slides/light.html#conclusion-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Conclusion",
    "text": "Conclusion\n\nDes standards communautaires qui favorisent la reproductibilité et la maintenabilité\nDe multiples outils pour simplifier leur mise en oeuvre\nUn coût d’autant plus faible que l’on se place en amont\nLe mouvement de modernisation du self est l’occasion d’une montée en compétence collective"
  },
  {
    "objectID": "slides/light.html#ressources-communautaires",
    "href": "slides/light.html#ressources-communautaires",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Ressources communautaires",
    "text": "Ressources communautaires\n\nCanaux de discussion\n\nA l’Insee\n\nPour toute question sur Git : Insee-Git-Gitlab\nPour toute question stat/self : Insee - Outils Stats v2\nPour toute question spécifique à AUS/LS3 : Insee-DSI-Plateformes-Internes-Datascience\n\nPlus largement sur R\n\nSur Tchap : Langage R (Tchap)\nSur Slack : r-grrr\n\n\nDocumentation\n\nService datascience Insee\nUtilitR\n\nFormation\n\nEspace formation du SSP Cloud"
  },
  {
    "objectID": "slides/manageurs.html#introduction",
    "href": "slides/manageurs.html#introduction",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Introduction",
    "text": "Introduction\n\nVersion pour les manageurs de la formation aux bonnes pratiques avec R et Git\n\n\nRetour à la page d’accueil pour explorer les autres versions"
  },
  {
    "objectID": "slides/manageurs.html#la-notion-de-bonnes-pratiques",
    "href": "slides/manageurs.html#la-notion-de-bonnes-pratiques",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "La notion de bonnes pratiques",
    "text": "La notion de bonnes pratiques\n\nOrigine : communauté des développeurs logiciels\nConstats :\n\nle “code est plus souvent lu qu’écrit” (Guido Van Rossum)\nla maintenance d’un code est très coûteuse\n\nConséquence : un ensemble de règles informelles, conventionnellement acceptées comme produisant des logiciels fiables, évolutifs et maintenables"
  },
  {
    "objectID": "slides/manageurs.html#pourquoi-sintéresser-aux-bonnes-pratiques",
    "href": "slides/manageurs.html#pourquoi-sintéresser-aux-bonnes-pratiques",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Pourquoi s’intéresser aux bonnes pratiques ?",
    "text": "Pourquoi s’intéresser aux bonnes pratiques ?\n\nL’activité du statisticien / datascientist tend à se rapprocher de celle du développeur :\n\nprojets intenses en code\nprojets collaboratifs et de grande envergure\ncomplexification des données et donc des infrastructures\ndéploiement d’applications pour valoriser les analyses"
  },
  {
    "objectID": "slides/manageurs.html#bonnes-pratiques-et-reproductibilité",
    "href": "slides/manageurs.html#bonnes-pratiques-et-reproductibilité",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Bonnes pratiques et reproductibilité",
    "text": "Bonnes pratiques et reproductibilité\n\n\n\n\n\nSource : Peng R., Reproducible Research in Computational Science, Science (2011)\n\nUne reproductibilité parfaite est coûteuse\nGit est un standard atteignable et efficient\n\n\n\n\n\n\n\n\nNote\n\n\nQuel socle de bonnes pratiques pour les projets statistiques en  ?"
  },
  {
    "objectID": "slides/manageurs.html#horizon-de-cette-formation",
    "href": "slides/manageurs.html#horizon-de-cette-formation",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Horizon de cette formation",
    "text": "Horizon de cette formation\nUn point de départ commun"
  },
  {
    "objectID": "slides/manageurs.html#horizon-de-cette-formation-1",
    "href": "slides/manageurs.html#horizon-de-cette-formation-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Horizon de cette formation",
    "text": "Horizon de cette formation\nUn point de départ commun \nUne structuration de projet plus viable"
  },
  {
    "objectID": "slides/manageurs.html#vers-un-socle-de-bonnes-pratiques",
    "href": "slides/manageurs.html#vers-un-socle-de-bonnes-pratiques",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Vers un socle de bonnes pratiques ?",
    "text": "Vers un socle de bonnes pratiques ?\n\n1️⃣ Qualité du code et structure des projets\n2️⃣ Les formats de données de diffusion\n3️⃣ Le contrôle de version\n4️⃣ Normes de sécurité\n5️⃣ Ouverture"
  },
  {
    "objectID": "slides/manageurs.html#enjeux",
    "href": "slides/manageurs.html#enjeux",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Enjeux",
    "text": "Enjeux\n\nD’une vision utilitariste du code à une vision du code comme outil de communication\nFavoriser la lisibilité et la maintenabilité\nFaciliter la réutilisation\nAssurer la transparence méthodologique"
  },
  {
    "objectID": "slides/manageurs.html#principes-généraux",
    "href": "slides/manageurs.html#principes-généraux",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Principes généraux",
    "text": "Principes généraux\n\nAdopter les standards communautaires\nUtiliser des fonctions\nDocumenter son code\nIndiquer les packages utilisés afin d’éviter les conflits"
  },
  {
    "objectID": "slides/manageurs.html#adopter-les-standards-communautaires",
    "href": "slides/manageurs.html#adopter-les-standards-communautaires",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Adopter les standards communautaires",
    "text": "1️⃣ Adopter les standards communautaires\nDeux outils pratiques aident à respecter les standards :\n\nlinter : programme qui vérifie que le code est formellement conforme à un certain guidestyle\n\nsignale problèmes formels, sans corriger\n\nformatter : programme qui reformate un code pour le rendre conforme à un certain guidestyle\n\nmodifie directement le code\n\n\n\n\n\n\n\n\nNote\n\n\nIl existe un guide de référence pour bien coder en R : le Tidyverse style guide."
  },
  {
    "objectID": "slides/manageurs.html#favoriser-la-modularité-des-projets",
    "href": "slides/manageurs.html#favoriser-la-modularité-des-projets",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "2️⃣ Favoriser la modularité des projets",
    "text": "2️⃣ Favoriser la modularité des projets\n\nFavoriser l’utilisation de fonctions\n\nLimite les risques d’erreur liés aux copier/coller\nRend le code plus lisible et plus compact\nUnicité de la source de vérité\n\nLes packages\n\nIdéal pour favoriser la réutilisation du code\nCoût de maintenance élevé"
  },
  {
    "objectID": "slides/manageurs.html#documenter-son-code",
    "href": "slides/manageurs.html#documenter-son-code",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "3️⃣ Documenter son code",
    "text": "3️⃣ Documenter son code\n\nGrands principes :\n\nDocumenter le pourquoi plutôt que le comment\nPrivilégier l’auto-documentation via des nommages pertinents\n\nDocumenter le projet (contexte, objectifs, fonctionnement) dans un fichier README\n\nQuelques modèles : utilitR, DoReMIFaSol"
  },
  {
    "objectID": "slides/manageurs.html#enjeux-1",
    "href": "slides/manageurs.html#enjeux-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Enjeux",
    "text": "Enjeux\n\nLe choix d’un format de données répond à un arbitrage entre plusieurs critères :\n\nFinalité (traitement, analyse, diffusion)\nPublic cible\nVolumétrie"
  },
  {
    "objectID": "slides/manageurs.html#recommandations",
    "href": "slides/manageurs.html#recommandations",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Recommandations",
    "text": "Recommandations\n\nEviter impérativement les formats de données adhérents à un langage (RDS, RData, fst, sas7bdat, etc.).\nDeux formats à privilégier :\n\nCSV : pour la plupart des usages courants\n\nAvantage : non-compressé donc facilement lisible\nInconvénients : pas de gestion des méta-données, peu adapté aux données volumineuses\n\nParquet : pour le traitement de données volumineuses\n\nCompressé et très performant en lecture/écriture\nGestion native des méta-données"
  },
  {
    "objectID": "slides/manageurs.html#archiver-son-code-proprement",
    "href": "slides/manageurs.html#archiver-son-code-proprement",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Archiver son code proprement",
    "text": "1️⃣ Archiver son code proprement\npour en finir avec ça :"
  },
  {
    "objectID": "slides/manageurs.html#archiver-son-code-proprement-1",
    "href": "slides/manageurs.html#archiver-son-code-proprement-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Archiver son code proprement",
    "text": "1️⃣ Archiver son code proprement\nou ça :"
  },
  {
    "objectID": "slides/manageurs.html#archiver-son-code-proprement-2",
    "href": "slides/manageurs.html#archiver-son-code-proprement-2",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Archiver son code proprement",
    "text": "1️⃣ Archiver son code proprement\nou encore ça :\nprior &lt;- read_csv(prior_path)\nprior &lt;- prior %&gt;%\n    select(id, proba_inter, proba_build, proba_rfl) %&gt;%\n    separate(id, into = c('nidt', 'grid_id'), sep = \":\") %&gt;%\n    group_by(nidt) %&gt;%\n    mutate(\n        proba_build = proba_build/sum(proba_build),\n        proba_rfl = proba_rfl/sum(proba_rfl),\n        ) %&gt;%\n    unite(col = \"id\", nidt, grid_id, sep = \":\")\n\n# Test\n# prior_test &lt;- prior %&gt;%\n#    mutate(\n#        proba_inter = round(proba_inter, 4)\n#        proba_build = round(proba_build, 4)\n#        proba_rfl = round(proba_rfl, 4)\n#    )\n\nwrite_csv(prior_round, \"~/prior.csv\")"
  },
  {
    "objectID": "slides/manageurs.html#archiver-son-code-proprement-3",
    "href": "slides/manageurs.html#archiver-son-code-proprement-3",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "1️⃣ Archiver son code proprement",
    "text": "1️⃣ Archiver son code proprement\nPour arriver à ça :\n\n\n\n\n\nSource : ThinkR"
  },
  {
    "objectID": "slides/manageurs.html#voyager-dans-le-temps-de-votre-projet",
    "href": "slides/manageurs.html#voyager-dans-le-temps-de-votre-projet",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "2️⃣ Voyager dans le temps (de votre projet)",
    "text": "2️⃣ Voyager dans le temps (de votre projet)"
  },
  {
    "objectID": "slides/manageurs.html#concepts",
    "href": "slides/manageurs.html#concepts",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Concepts",
    "text": "Concepts\nGit, GitHub, GitLab… quelles différences ?\n\nGit est un logiciel ;\nUtilisation en ligne de commandes\nDifférentes interfaces graphiques (RStudio, VS Code…)"
  },
  {
    "objectID": "slides/manageurs.html#concepts-1",
    "href": "slides/manageurs.html#concepts-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Concepts",
    "text": "Concepts\nGit, GitHub, GitLab… quelles différences ?\n\nGitHub et GitLab sont des forges logicielles\nForge: espace d’archivage de code\nDes fonctionalités supplémentaires : réseau social du code\n\n\n\n\n\n\n\nAstuce\n\n\n\nGitHub : utilisation pour les projets open-source\nGitLab : utilisation pour les projets internes"
  },
  {
    "objectID": "slides/manageurs.html#bonnes-pratiques",
    "href": "slides/manageurs.html#bonnes-pratiques",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Bonnes pratiques",
    "text": "Bonnes pratiques\nQue versionne-t-on ?\n\nEssentiellement du code source\nPas d’outputs (fichiers .html, .pdf, modèles…)\nPas de données, d’informations locales ou sensibles\n\n\n\n\n\n\n\n\nNote\n\n\nPour définir des règles qui évitent de committer tel ou tel fichier, on utilise un fichier nommé .gitignore.\nSi on mélange du code et des éléments annexes (output, données…) dans un même dossier, il faut consacrer du temps à ce fichier.\nDes modèles de .gitignore existent sur internet, par exemple celui-ci pour les projets .\nN’hésitez pas à y ajouter des règles conservatrices (par exemple *.csv), comme cela est expliqué dans la documentation utilitR."
  },
  {
    "objectID": "slides/manageurs.html#bonnes-pratiques-1",
    "href": "slides/manageurs.html#bonnes-pratiques-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Bonnes pratiques",
    "text": "Bonnes pratiques\nFormat des commits\n\n\n\n\n\n\n\nFréquence\n\nAussi souvent que possible\nLe lot de modifications doit “avoir du sens”\n\nMessages\n\nCourts et informatifs (comme un titre de mail)\nDécrire le pourquoi plutôt que le comment dans le texte"
  },
  {
    "objectID": "slides/manageurs.html#ouverture-vers-la-partie-4",
    "href": "slides/manageurs.html#ouverture-vers-la-partie-4",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Ouverture vers la partie 4",
    "text": "Ouverture vers la partie 4\nNous nous sommes concentrés sur les briques:\n\n\n\n“Code R”\n“Données”\n\n\n\n\n\nMais besoin d’aller plus loin:\n\n“Code R” : besoin d’un environnement standardisé (renv)\n“Données”: enjeu de localisation (réseau, cloud, etc)\n“Configuration”: enjeu de la sécurité"
  },
  {
    "objectID": "slides/manageurs.html#le-cas-dusage-classique-à-linsee",
    "href": "slides/manageurs.html#le-cas-dusage-classique-à-linsee",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Le cas d’usage classique à l’Insee",
    "text": "Le cas d’usage classique à l’Insee\nIl faut distinguer deux types de processus de production :\n\ncelui qui est entièrement automatisé, et où l’intervention humaine est limitée ;\ncelui qui nécessite du travail humain postérieur de la part du statisticien, et donc fait l’objet de tâtonnements\n\ncalcul du taux de pauvreté avec ERFS et SRCV ;\nmicro-simulation avec le modèle INES ;\ndes processus de suivi conjoncturels…"
  },
  {
    "objectID": "slides/manageurs.html#pourquoi-git-répond-il-bien-aux-enjeux-de-la-production",
    "href": "slides/manageurs.html#pourquoi-git-répond-il-bien-aux-enjeux-de-la-production",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Pourquoi Git répond-il bien aux enjeux de la production ?",
    "text": "Pourquoi Git répond-il bien aux enjeux de la production ?\n\nExemple avec calcul du taux de pauvreté dans SRCV\n\n\nLes tâtonnements supposent des allers et retours sur différentes hypothèses :\n\nprise en compte évolutive des phénomènes affectant l’indicateur (défiscalisation de revenus, nouvelles prestations sociales, etc.) ;\nproduction de différentes variantes que l’on veut pouvoir comparer les unes aux autres ;\ncomprendre ce qui a été fait pour les précédentes productions, éventuellement qui a fait quoi."
  },
  {
    "objectID": "slides/manageurs.html#quels-concepts",
    "href": "slides/manageurs.html#quels-concepts",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Quels concepts ?",
    "text": "Quels concepts ?\n\n\nles variantes peuvent se décliner sous la notion de branches ;\nen traçant l’ensemble des modifications du code, Git facilite la complète reproductibilité des tâtonnements ;\nau travers de l’historique, il permet de retracer l’ensemble du cheminement ;\nle git blame permet de voir qui a fait quoi ;\nmais cela nécessite une discipline sur l’usage de Git.\n\n⇒ deux notions essentielles : reproductibilité et traçabilité"
  },
  {
    "objectID": "slides/manageurs.html#gestion-du-cycle-de-vie-dun-projet",
    "href": "slides/manageurs.html#gestion-du-cycle-de-vie-dun-projet",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Gestion du cycle de vie d’un projet",
    "text": "Gestion du cycle de vie d’un projet\n\nChangement de paradigme : le code self doit être maintenu\n\nChangement de version de R et des packages ;\nQuelles solutions connaissez-vous ?\n\nrenv et la notion de lockfile\nanticiper les montées de version des logiciels :\n\non peut envisager un protocole pour cela"
  },
  {
    "objectID": "slides/manageurs.html#gestion-du-cycle-de-vie-dun-projet-renv",
    "href": "slides/manageurs.html#gestion-du-cycle-de-vie-dun-projet-renv",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Gestion du cycle de vie d’un projet: renv",
    "text": "Gestion du cycle de vie d’un projet: renv\nExemple de renv.lock\n\n\nObserver la composition de ce fichier (100 premières lignes)\n\n\n\nrenv.lock\n\n{\n  \"R\": {\n    \"Version\": \"4.3.3\",\n    \"Repositories\": [\n      {\n        \"Name\": \"CRAN\",\n        \"URL\": \"https://packagemanager.posit.co/cran/latest\"\n      }\n    ]\n  },\n  \"Packages\": {\n    \"BH\": {\n      \"Package\": \"BH\",\n      \"Version\": \"1.84.0-0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Hash\": \"a8235afbcd6316e6e91433ea47661013\"\n    },\n    \"DBI\": {\n      \"Package\": \"DBI\",\n      \"Version\": \"1.2.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\"\n      ],\n      \"Hash\": \"164809cd72e1d5160b4cb3aa57f510fe\"\n    },\n    \"DT\": {\n      \"Package\": \"DT\",\n      \"Version\": \"0.33\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"crosstalk\",\n        \"htmltools\",\n        \"htmlwidgets\",\n        \"httpuv\",\n        \"jquerylib\",\n        \"jsonlite\",\n        \"magrittr\",\n        \"promises\"\n      ],\n      \"Hash\": \"64ff3427f559ce3f2597a4fe13255cb6\"\n    },\n    \"KernSmooth\": {\n      \"Package\": \"KernSmooth\",\n      \"Version\": \"2.23-22\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"stats\"\n      ],\n      \"Hash\": \"2fecebc3047322fa5930f74fae5de70f\"\n    },\n    \"MASS\": {\n      \"Package\": \"MASS\",\n      \"Version\": \"7.3-60.0.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"grDevices\",\n        \"graphics\",\n        \"methods\",\n        \"stats\",\n        \"utils\"\n      ],\n      \"Hash\": \"b765b28387acc8ec9e9c1530713cb19c\"\n    },\n    \"Matrix\": {\n      \"Package\": \"Matrix\",\n      \"Version\": \"1.6-5\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"grDevices\",\n        \"graphics\",\n        \"grid\",\n        \"lattice\",\n        \"methods\",\n        \"stats\",\n        \"utils\"\n      ],\n      \"Hash\": \"8c7115cd3a0e048bda2a7cd110549f7a\"\n    },\n    \"R6\": {\n      \"Package\": \"R6\",\n      \"Version\": \"2.5.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"470851b6d5d0ac559e9d01bb352b4021\"\n    },\n    \"RColorBrewer\": {\n\n\n\n\n\n\n\n\nCe que renv évite\n\n\nOn retrouve parfois sur internet un code similaire à celui-ci :\n# A ne pas reproduire chez vous 😨\nif (!requireNamespace(\"dplyr\", quietly = TRUE)) {\n  install.packages(\"dplyr\")\n}"
  },
  {
    "objectID": "slides/manageurs.html#gestion-du-cycle-de-vie-dun-projet-1",
    "href": "slides/manageurs.html#gestion-du-cycle-de-vie-dun-projet-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Gestion du cycle de vie d’un projet",
    "text": "Gestion du cycle de vie d’un projet\n\nGérer le cycle de vie:\n\ndu code\nde son environnement d’exécution\ndes données mobilisées en entrée du projet et produites de manière intermédiaire.\n\nDéfinir responsabilités et organisation à la fois :\n\nsur la maintenance du code ;\nsur gitlab.insee.fr."
  },
  {
    "objectID": "slides/manageurs.html#question",
    "href": "slides/manageurs.html#question",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Question",
    "text": "Question\n\n\n\n\n\n\n\nQuestion\n\n\nQuels sont, selon vous, les principaux risques de sécurité liés au développement en self ?"
  },
  {
    "objectID": "slides/manageurs.html#risques",
    "href": "slides/manageurs.html#risques",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Risques 👮",
    "text": "Risques 👮\n\nMot de passe et jetons d’accès à des API\npas de mot de passe ni de jeton d’accès écrits dans le code\nRisques sur les données :\n\npas de données dans Git\npas de compte d’accès commun à des bases de données\npas de données sensibles en dehors des environnements protégés"
  },
  {
    "objectID": "slides/manageurs.html#jetons-daccès-à-des-api",
    "href": "slides/manageurs.html#jetons-daccès-à-des-api",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Jetons d’accès à des API",
    "text": "Jetons d’accès à des API\n\nune solution à préférer au mot de passe (quand disponible)\ngestion fine des droits\npossibilité de révocation des jetons\npeuvent être limités dans le temps\nmais qui présentent des risques identiques aux mots de passe si les jetons ont des droits élevés"
  },
  {
    "objectID": "slides/manageurs.html#les-solutions-concrètes-pour-les-mots-de-passe",
    "href": "slides/manageurs.html#les-solutions-concrètes-pour-les-mots-de-passe",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Les solutions concrètes pour les mots de passe",
    "text": "Les solutions concrètes pour les mots de passe\nNotion de boîte de dialogue qui permet d’entrer le mot de passe sans l’inscrire dans le code\nlibrary(DBI)\nlibrary(RPostgresInsee)\nlibrary(rjson)\n\n## import des éléments de connexion\n\nconnexion_details &lt;- fromJSON(file = \"X:/HAB-LOGFIDELI/Production en self/conf_servers_fideli.json\")\n\n## connexion au clone\n\nconnexion_clone &lt;- do.call(dbConnect, args = c(connexion_details$clone[2:4], \n                                               list(drv = Postgres(),\n                                                    password = rstudioapi::askForPassword(\"Mot de passe :\"))))"
  },
  {
    "objectID": "slides/manageurs.html#résultat-un-prompt-qui-récupère-le-mot-de-passe",
    "href": "slides/manageurs.html#résultat-un-prompt-qui-récupère-le-mot-de-passe",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Résultat : un prompt qui récupère le mot de passe",
    "text": "Résultat : un prompt qui récupère le mot de passe"
  },
  {
    "objectID": "slides/manageurs.html#a-utiliser-avec-un-gestionnaire-de-mots-de-passe",
    "href": "slides/manageurs.html#a-utiliser-avec-un-gestionnaire-de-mots-de-passe",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "A utiliser avec un gestionnaire de mots de passe",
    "text": "A utiliser avec un gestionnaire de mots de passe\nKeePass  :\n\ndisponible dans le centre logiciel\nsimple d’utilisation\nles mots de passe sont stockés dans un fichier .kdbx chiffré\nles fichiers .kdbx sont protégés par un mot de passe maître\nune aide à la génération de mots de passe forts"
  },
  {
    "objectID": "slides/manageurs.html#droits-daccès-aux-données",
    "href": "slides/manageurs.html#droits-daccès-aux-données",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Droits d’accès aux données",
    "text": "Droits d’accès aux données\n\nne pas utiliser de compte générique pour accéder à des bases de données :\n\nne répond pas aux exigences de traçabilité\nne répond pas aux exigences de révocation des droits d’accès\n\npréférer :\n\ndes comptes individuels\nassociés à une revue annuelle des droits"
  },
  {
    "objectID": "slides/manageurs.html#stockage-des-données",
    "href": "slides/manageurs.html#stockage-des-données",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Stockage des données",
    "text": "Stockage des données\n\nDonnées sous forme de fichier :\n\nne pas les mettre sous Git (utiliser le fichier .gitignore)\nveiller à ce que les données sensibles ne prolifèrent pas.\n\nDonnées dans des bases de données :\n\ntoujours se poser la question de l’opportunité de les dupliquer sous forme de fichier\n\n\nOn préférera toujours avoir des données stockées dans un unique espace pour lequel les droits d’accès sont gérés individuellement."
  },
  {
    "objectID": "slides/manageurs.html#quelques-questions-pour-commencer",
    "href": "slides/manageurs.html#quelques-questions-pour-commencer",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Quelques questions pour commencer",
    "text": "Quelques questions pour commencer\n\nPour limiter les risques de sécurité, vaut-il mieux cacher son code à ses collègues ?\nQuelle est la nature juridique des codes sources réalisés à l’Insee ?\nR, Python et leurs packages sont gratuits, comment est-ce possible ?\nConnaissez-vous la science ouverte et ses standards ?"
  },
  {
    "objectID": "slides/manageurs.html#la-sécurité-par-lobscurité",
    "href": "slides/manageurs.html#la-sécurité-par-lobscurité",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "La sécurité par l’obscurité",
    "text": "La sécurité par l’obscurité\n\nPostulat : si on conserve ses codes sources secrets alors les failles de sécurité seront plus difficiles à détecter\nCe postulat s’est avéré faux :\n\ndes failles de sécurité sont en permanence détectées dans des logiciels propriétaires\ncela revient à cacher la fiabilité réelle des processus mis en oeuvre\nles logiciels open source sont examinés par de très nombreuses personnes et corrigés en cas de problème"
  },
  {
    "objectID": "slides/manageurs.html#nature-juridique-des-codes-sources",
    "href": "slides/manageurs.html#nature-juridique-des-codes-sources",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Nature juridique des codes sources",
    "text": "Nature juridique des codes sources\n\nLes codes sources achevés (qui servent en production) ont le statut de document administratif\nIls peuvent faire l’objet de demandes d’accès\nEn cas d’accès, la publication doit se faire en open source\nPlutôt que de vérifier en catastrophe s’il y a des problèmes, autant s’y préparer au fur et à mesure"
  },
  {
    "objectID": "slides/manageurs.html#différents-niveaux-douverture-possibles",
    "href": "slides/manageurs.html#différents-niveaux-douverture-possibles",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Différents niveaux d’ouverture possibles",
    "text": "Différents niveaux d’ouverture possibles\n\nOn peut déjà ouvrir les codes en interne au sein de l’Insee :\n\nmeilleure compréhension mutuelle des travaux\nassocié à GitLab, un cadre idéal pour la collaboration et la mutualisation"
  },
  {
    "objectID": "slides/manageurs.html#différents-niveaux-douverture-possibles-1",
    "href": "slides/manageurs.html#différents-niveaux-douverture-possibles-1",
    "title": "Bonnes pratiques pour les projets statistiques",
    "section": "Différents niveaux d’ouverture possibles",
    "text": "Différents niveaux d’ouverture possibles\n\nAu-delà, la publication de certains projets en open source permet de valoriser le savoir-faire de l’Insee :\n\nPackages R : disaggR, btb, RJDemetra…\nEurostat systématise l’open source pour les travaux européens\nune nécessité pour ne pas passer pour un passager clandestin vis-à-vis des communautés open source\nun moyen d’assurer la transparence de nos méthodes (cf. code des bonnes pratiques et les standards de la science ouverte)\n\n\nL’ensemble des bonnes pratiques qui ont été présentées sont issues de l’open source."
  }
]